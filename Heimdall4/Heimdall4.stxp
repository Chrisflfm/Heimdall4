
#Include "Variables.stxp"

Task tMain Autorun
//Init
//Reset registers
	regVensterComm:=0;
	regZonweerComm:=0;
//Reset flags
	blLampenAan := False;
	blLampen1Aan := False;
	blLampen2Aan := False;
	blLampen3Aan := False;
	blAutoLampenAan := False;
	blManLampenAan := False;
	blAlleVenstersDicht := False;
	blAlleVenstersOpen := False;
	blAlleZonweerDicht := False;
	blAlleZonweerOpen := False;
	blPulsPoort := False;
	blVenster1 := False;
	blVenster2 := False;
	blVenster3 := False;
	blVenster4 := False;
	blVenster5 := False;
	blVenster6 := False;
	blVenster7 := False;
	blVenster8 := False;
	blVenster9 := False;
	blVenster10 := False;
	blVenster11 := False;
	blVenster12 := False;
	blVenster13 := False;
	blVenster14 := False;
	blVenster15 := False;
	blVenster16 := False;
	blVenster17 := False;
	blVenster18 := False;
	blZonnewering1 := False;
	blZonnewering3 := False;
	blZonnewering4 := False;
	blZonnewering5 := False;
	blZonnewering6 := False;
	blZonnewering12 := False;
	blZonnewering13 := False;
	blZonnewering15 := False;
	blZonnewering16 := False;
	blZonnewering17 := False;
	blRegen := False;
	blSetClock := False;
	blPoort30MinPauze := False;
//Reset outputs
	hrVenster1 := False;
	hrVenster2 := False;
	hrVenster3 := False;
	hrVenster4 := False;
	hrVenster5 := False;
	hrVenster6 := False;
	hrVenster7 := False;
	hrVenster8 := False;
	hrVenster9 := False;
	hrVenster10 := False;
	hrVenster11 := False;
	hrVenster12 := False;
	hrVenster13 := False;
	hrVenster14 := False;
	hrVenster15 := False;
	hrVenster16 := False;
	hrVenster17 := False;
	hrZonnewering1 := False;
	hrZonnewering3 := False;
	hrZonnewering4 := False;
	hrZonnewering5 := False;
	hrZonnewering6 := False;
	hrZonnewering12 := False;
	hrZonnewering13 := False;
	hrZonnewering15 := False;
	hrZonnewering16 := False;
	hrZonnewering17 := False;
	hrOpenDicht := False;
	hrLampenTom := False;
	hrLampenPlatina := False;
	hrPoortTom := False;
//Reset fouten
	Ft01_ZoutniveauLaag := False;
	Ft02_GeenComunicatie := False;
	Ft03_Brand := False;
	Ft04_Inbraak := False;
	Ft05_DeurPlatinaOpen := False;
	Ft06_WaterlekZoutvat := False;
	
	regRebootCounter := regRebootCounter+1;
	
	
//*************************************Lampen aan zonder wacht als donker en alarm uit**********
	if ctSchemer and ctAlarmUit then
			blLampenPlatina := True;
			blLampenTom := True;
	end_if
	
//**************************************Start Main loop**************************************
	While True Do

// open of dicht
	if (blVensterDicht or blZonweerOpen or blAlleVenstersDicht or blAlleZonweerOpen) then
		blOpenDicht := True;
	End_if;
	
	
//*************************************sturing dakvensters***************************************
//gezamelijk
	if (ctV1Dicht and ctV2Dicht and ctV3Dicht and ctV4Dicht and ctV5Dicht and ctV6Dicht and ctV7Dicht and ctV8Dicht and ctV9Dicht and ctV10Dicht and ctV11Dicht and ctV12Dicht and ctV13Dicht and ctV14Dicht and ctV15Dicht and ctV16Dicht and ctV17Dicht and ctV18Dicht) then
		blAlleVenstersToe := True;
	Else
		blAlleVenstersToe := False;
	End_if;
	if (blRegen or ctAlarmAan) and not blAlleVenstersToe then
		blAlleVenstersDicht := True;
	End_if;

	if blAlleVenstersDicht or (blAlleVenstersOpen and not blRegen) then
		blVenster1 := true;
		blVenster2 := true;
		blVenster3 := true;
		blVenster4 := true;
		blVenster5 := true;
		blVenster6 := true;
		blVenster7 := true;
		blVenster8 := true;
		blVenster9 := true;
		blVenster10 := true;
		blVenster11 := true;
		blVenster12 := true;
		blVenster13 := true;
		blVenster14 := true;
		blVenster15 := true;
		blVenster16 := true;
		blVenster17 := true;
		blVenster18 := true;
		
		TimerStart(stVensters,T#30s);//regActivatietijdzonweer);// Timer is set to 30s and started.
		When TimerEnd(stVensters) or (not blAlleVenstersDicht and not blAlleVenstersOpen) Continue; // When the time has elapsed, the program continues here
			
		blVenster1 := False;
		blVenster2 := False;
		blVenster3 := False;
		blVenster4 := False;
		blVenster5 := False;
		blVenster6 := False;
		blVenster7 := False;
		blVenster8 := False;
		blVenster9 := False;
		blVenster10 := False;
		blVenster11 := False;
		blVenster12 := False;
		blVenster13 := False;
		blVenster14 := False;
		blVenster15 := False;
		blVenster16 := False;
		blVenster17 := False;
		blVenster18 := False;
		
		blAlleVenstersDicht := False;
		blAlleVenstersOpen := False;
		blOpenDicht := False;
	End_if;

// individueel		
		if (blVensterDicht or (blVensterOpen and not blRegen)) and not blAlleVenstersOpen and not blAlleVenstersDicht then
			case regVensterNr of
				1:	blVenster1 := true;
					break;
				
		      	2:	blVenster2 := true;
					break;
				
				3:	blVenster3 := true;
					break;
				
				4:	blVenster4 := true;
					break;
				
				5:	blVenster5 := true;
					break;
				
		  		6:	blVenster6 := true;
					break;
				
		 		7:	blVenster7 := true;
					break;
				
				8:	blVenster8 := true;
					break;
				
				9:	blVenster9 := true;
					break;
				
				10:	blVenster10 := true;
					break;
				
				11:	blVenster11 := true;
					break;
				
				12:	blVenster12 := true;
					break;
				
				13:	blVenster13 := true;
					break;
				
				14:	blVenster14 := true;
					break;
				
				15:	blVenster15 := true;
					break;
				
				16:	blVenster16 := true;
					break;
				
				17:	blVenster17 := true;
					break;
				
				18:	blVenster18 := true;
					break;
			
				Else regVensterNr := -1;

			End_Case;
			TimerStart(stVensters,T#30s);//regActivatietijdzonweer);// Timer is set to 30s and started.
		    When TimerEnd(stVensters) or (not blVensterOpen and not blVensterDicht) Continue; // When the time has elapsed, the program continues here
				blVenster1 := False;
				blVenster2 := False;
				blVenster3 := False;
				blVenster4 := False;
				blVenster5 := False;
				blVenster6 := False;
				blVenster7 := False;
				blVenster8 := False;
				blVenster9 := False;
				blVenster10 := False;
				blVenster11 := False;
				blVenster12 := False;
				blVenster13 := False;
				blVenster14 := False;
				blVenster15 := False;
				blVenster16 := False;
				blVenster17 := False;
				blVenster18 := False;
				blVensterOpen := False;
				blVensterDicht := False;
				blOpenDicht := False;
		End_if;
	
		
		
//*************************************sturing zonnewering**************************************
		if blAlleZonweerDicht or blAlleZonweerOpen then
			blZonnewering1 := true;
			blZonnewering12 := true;
			blZonnewering13 := true;
			blZonnewering15 := true;
			blZonnewering16 := true;
			blZonnewering17 := true;
			blZonnewering3 := true;
			blZonnewering4 := true;
			blZonnewering5 := true;
			blZonnewering6 := true;
			
			TimerStart(stVensters,T#30s);//regActivatietijdzonweer);// Timer is set to 30s and started.
		    When TimerEnd(stVensters) or (not blAlleZonweerDicht and not blAlleZonweerOpen) Continue; // When the time has elapsed, the program continues here
					
			blZonnewering1 := False;
			blZonnewering12 := False;
			blZonnewering13 := False;
			blZonnewering15 := False;
			blZonnewering16 := False;
			blZonnewering17 := False;
			blZonnewering3 := False;
			blZonnewering4 := False;
			blZonnewering5 := False;
			blZonnewering6 := False;
			blAlleZonweerDicht := False;
			blAlleZonweerOpen := False;
			blOpenDicht := False;
		End_if;
		
		if (blZonweerDicht or blZonweerOpen) and not blAlleZonweerDicht and not blAlleZonweerOpen then	
			case regVensterNr of
				1:	blZonnewering1 := true;
					break;
				
				3:	blZonnewering3 := true;
					break;
				
				4:	blZonnewering4 := true;
					break;
				
				5:	blZonnewering5 := true;
					break;
				
				6:	blZonnewering6 := true;
					break;
				
				12:	blZonnewering12 := true;
					break;
				
				13:	blZonnewering13 := true;
					break;
				
				15:	blZonnewering15 := true;
					break;
				
				16:	blZonnewering16 := true;
					break;
				
				17:	blZonnewering17 := true;
					break;
				
				Else regZonweerNr := -1;

			End_Case;
			TimerStart(stVensters,T#30s);//regActivatietijdzonweer);// Timer is set to 30s and started.
		    When TimerEnd(stVensters) or (not blZonweerDicht and not blZonweerOpen) Continue; // When the time has elapsed, the program continues here
			blZonnewering1 := False;
			blZonnewering3 := False;
			blZonnewering4 := False;
			blZonnewering5 := False;
			blZonnewering6 := False;
			blZonnewering12 := False;
			blZonnewering13 := False;
			blZonnewering15 := False;
			blZonnewering16 := False;
			blZonnewering17 := False;
			blZonweerDicht := False;
			blZonweerOpen := False;
			blOpenDicht := False;
		End_if;
		

//*************************************sturing Lampen**********************************************
				
		//output is enekel floag tom en flag Platina
		If blLampen1Aan then
			//19A
			blManLampenAan := True
	 	End_If;
	
		If blLampen2Aan or blLampen3Aan then
			//19B (platina)
			blManLampenAan := True;
		End_If;
		
		If blLampenAan then
			//alle lampen
			blManLampenAan := True
	 	End_If;
	
		if not (blLampen1Aan or blLampen2Aan or blLampen2Aan or blLampenAan) then
			blManLampenAan := False
		End_If;
		
		aanTijd := regUurLampAan+(regMinLampAan/100.0);
		uitTijd := regUurLampUit+(regMinLampUit/100.0);
		actueleTijd := Hours+(Minutes/100.0);
		
		if actueleTijd >= aanTijd then
			blAutoLampenAan := true;
		End_If;

		if actueleTijd >= uitTijd or actueleTijd < aanTijd then
			blAutoLampenAan := False;
		End_If;
	
		if blLampen1Aan or (blAutoLampenAan and ctSchemer and ctAlarmUit) Then
			blLampenTom := True;
		End_If
		
		if blLampen2Aan or blLampen3Aan or (blAutoLampenAan and ctSchemer and ctAlarmUit) Then
			blLampenPlatina := True;
		End_If	
			
		if  not ctAlarmUit then
			TimerStart(stLampenTimer,T#15m);
		end_if
				
		if not blLampen1Aan and (not blAutoLampenAan or not ctSchemer or (not ctAlarmUit and timerend(stLampenTimer))) then
			blLampenTom := False;
		End_If
		
		if not blLampen2Aan and not blLampen3Aan and (not blAutoLampenAan or not ctSchemer or (not ctAlarmUit and timerend(stLampenTimer))) Then
			blLampenPlatina := False;
		end_if
//*************************************Sturing Poort**********************************************
	
		if (Hours >= regUurPoortOpen and Minutes >= regMinPoortOpen and Weekday > 0 and Weekday < 7 and ctPoortDicht and not blPoortTomIsOpen) then
			if  regAantDagPoortToe == 0 then
				blPoort := True;
				blPoortTomIsOpen := True;
				TimerStart(stPoortOpen,T#30m);//regActivatietijdzonweer);// Timer is set to 30m and started.
				blPoort30MinPauze := True;
			else
				 regAantDagPoortToe :=  regAantDagPoortToe - 1;
			End_if;
		End_If;
		
		If Hours < regUurPoortOpen then
			blPoortTomIsOpen := False; // reset na middernacht
		End_If;
		
		if TimerEnd(stPoortOpen) and ctAlarmAan and not ctPoortDicht and blPoort30MinPauze then
			blPoort := True;
			blPoort30MinPauze := False;
		End_If;
		
		if blPoort or blPulsPoort then
			blPoortTom := True;
			TimerStart(stPoortPuls,T#1s);
	     	When TimerEnd(stPoortPuls) Continue;
			blPoortTom := False;
	 		blPoort := False;
			blPulsPoort := False;
		End_If;
	
	End_While;

End_Task

Task tVeiligheden Autorun
//*************************************tVeiligheden****************************************
	While True Do
//*************************************Alarm**********************************************
//Alarm
		blnotAlarmAan := ctAlarmAan;
		blnotAlarmUit := ctAlarmUit;
		blnotBrand := not ctBrand;
		blnotInbraak := not ctInbraak;
		blnotDeurPlatina := not ctDeurPlatina;
		
		if ctAlarmAan and blVentilatie then
			blVentilatie := False;
		End_if;
		
		if ctAlarmAan and blklepToe then
			blklepToe := False;
		End_if;
	
		if not ctBrand then
			if ctPoortDicht then
				blPulsPoort := True;
			End_if;
			blLampenPlatina := True;
			blLampenTom := True;
		End_If;
	
		if not ctInbraak then
			blLampenTom := True;
		End_If;
//Regen
		if ctregen1 or ctregen2 then 
			blRegen := True;
			blWaiting := False;
		End_if
		
		if blRegen and not ctregen1 and not ctregen2 and not blWaiting then
			TimerStart(stRegenSensor,T#5m);
			blwaiting := True;
		end_if

		if blRegen and TimerEnd(stRegenSensor) and not ctregen1 and not ctregen2 then
			blRegen := False;
			blWaiting := False;
		end_if
		
		blDroog := not blRegen;

//Licht donker
		if not ctSchemer then
			blDonker := False;
			blLicht := True;
		else
			blDonker := True;
			blLicht := False;
		End_if; 

// set clock
		if blSetClock then
			Hours := regHours;
			Minutes := regMinutes;
			Seconds := regSeconds;
			blSetClock := False;
		End_if
//*************************************Outputs**********************************************
		
		if blOpenDicht or blRegen or ctAlarmAan then
			hrOpenDicht := true
		else
			hrOpenDicht := false
		End_If;		

//dakvensters
		if not blVenster1 then
			hrVenster1 := False;
		End_If;		
		if (blVenster1 and not hrOpenDicht) or (blVenster1 and hrOpenDicht) then
			hrVenster1 := True;
		End_If;		
		if not blVenster2 then
			hrVenster2 := False;
		End_If;		
		if (blVenster2 and not hrOpenDicht) or (blVenster2 and hrOpenDicht ) then
			hrVenster2 := True;
		End_If;		
		if not blVenster3 then
			hrVenster3 := False;
		End_If;		
		if (blVenster3 and not hrOpenDicht) or (blVenster3 and hrOpenDicht ) then
			hrVenster3 := True;
		End_If;		
		if not blVenster4 then
			hrVenster4 := False;
		End_If;		
		if (blVenster4 and not hrOpenDicht) or (blVenster4 and hrOpenDicht ) then
			hrVenster4 := True;
		End_If;		
		if not blVenster5 then
			hrVenster5 := False;
		End_If;		
		if (blVenster5 and not hrOpenDicht) or (blVenster5 and hrOpenDicht ) then
			hrVenster5 := True;
		End_If;		
		if not blVenster6 then
			hrVenster6 := False;
		End_If;		
		if (blVenster6 and not hrOpenDicht) or (blVenster6 and hrOpenDicht ) then
			hrVenster6 := True;
		End_If;		
		if not blVenster7 then
			//hrVenster7 := False;
		End_If;		
		if (blVenster7 and not hrOpenDicht) or (blVenster7 and hrOpenDicht ) then
			//hrVenster7 := True;
		End_If;		
		if not blVenster8 then
			//hrVenster8 := False;
		End_If;		
		if (blVenster8 and not hrOpenDicht) or (blVenster8 and hrOpenDicht) then
			//hrVenster8 := True;
		End_If;		
		if not blVenster9 then
			//hrVenster9 := False;
		End_If;		
		if (blVenster9 and not hrOpenDicht) or (blVenster9 and hrOpenDicht ) then
			//hrVenster9 := True;
		End_If;		
		if not blVenster10 then
			hrVenster10 := False;
		End_If;		
		if (blVenster10 and not hrOpenDicht) or (blVenster10 and hrOpenDicht ) then
			hrVenster10 := True;
		End_If;		
		if not blVenster11 then
			hrVenster11 := False;
		End_If;		
		if (blVenster11 and not hrOpenDicht) or (blVenster11 and hrOpenDicht ) then
			hrVenster11 := True;
		End_If;		
		if not blVenster12 then
			hrVenster12 := False;
		End_If;		
		if (blVenster12 and not hrOpenDicht) or (blVenster12 and hrOpenDicht ) then
			hrVenster12 := True;
		End_If;		
		if not blVenster13 then
			hrVenster13 := False;
		End_If;		
		if (blVenster13 and not hrOpenDicht) or (blVenster13 and hrOpenDicht ) then
			hrVenster13 := True;
		End_If;		
		if not blVenster14 then
			hrVenster14 := False;
		End_If;		
		if (blVenster14 and not hrOpenDicht) or (blVenster14 and hrOpenDicht ) then
			hrVenster14 := True;
		End_If;		
		if not blVenster15 then
			hrVenster15 := False;
		End_If;		
		if (blVenster15 and not hrOpenDicht) or (blVenster15 and hrOpenDicht ) then
			hrVenster15 := True;
		End_If;		
		if not blVenster16 then
			hrVenster16 := False;
		End_If;		
		if (blVenster16 and not hrOpenDicht) or (blVenster16 and hrOpenDicht ) then
			hrVenster16 := True;
		End_If;		
		if not blVenster17 then
			hrVenster17 := False;
		End_If;		
		if (blVenster17 and not hrOpenDicht) or (blVenster17 and hrOpenDicht ) then
			hrVenster17 := True;
		End_If;		
		if not blVenster18 then
			hrVenster18 := False;
		End_If;		
		if (blVenster18 and not hrOpenDicht) or (blVenster18 and hrOpenDicht ) then
			hrVenster18 := True;
		End_If;		

//Zonnewering

		if  blZonnewering1 then
			hrZonnewering1 := True;
		else
			hrZonnewering1 := False;
		End_If;		
		
		if blZonnewering3 then
			hrZonnewering3 := True;
		else
			hrZonnewering3 := False;
		End_If;		
		
		if blZonnewering4 then
			hrZonnewering4 := True;
		else
			hrZonnewering4 := False;
		End_If;
						
		if blZonnewering5 then
			hrZonnewering5 := True;
		else
			hrZonnewering5 := False;
		End_If;		
		
		if blZonnewering6 then
			hrZonnewering6 := True;
		else
			hrZonnewering6 := False;
		End_If;		
		
		if blZonnewering12 then
			hrZonnewering12:= True;
		else
			hrZonnewering12:= False;
		End_If;		
		
		if blZonnewering13 then
			hrZonnewering13:= True;
		else
			hrZonnewering13:= False;
		End_If;		
			
		if blZonnewering15 then
			hrZonnewering15:= True;
		else
			hrZonnewering15:= False;
		End_If;		
		
		if blZonnewering16 then
			hrZonnewering16:= True;
		else
			hrZonnewering16:= False;
		End_If;		
			
		if blZonnewering17 then
			hrZonnewering17:= True;
		else
			hrZonnewering17 := False;
		End_If;		
				
//Lampen 
		if blLampenPlatina then
			hrLampenPlatina := true;
		else
			hrLampenPlatina := false;
		End_If;
	
		if blLampenTom then
			hrLampenTom := true;
		else
			hrLampenTom := false;
		End_If;
	
//Poort	
		if blPoortTom then
			hrPoortTom := true;
		else	
			hrPoortTom := False;
		End_If;

	End_While;

End_Task

Task tPython Autorun
//*************************************Python****************************************
	While True Do
	 // self.wensRegime  0 =uit, -1 = koelen 1 = verwarmen 2=automatisch warm -2 = automatisch koel
		if ctAlarmUit then
			
			if flGroep2 then 
				Groep2kleur := 1;
			else
				Groep2kleur := 2;
			End_If
		
			if flGroep7 then 
				Groep7kleur := 1;
			else
				Groep7kleur := 2;
			End_If
		
			if flGroep8 then 
				Groep8kleur := 1;
			else
				Groep8kleur := 2;
			End_If
		
			if flGroep9 then 
				Groep9kleur := 1;
			else
				Groep9kleur := 2;
			End_If
		
			if flGroep12 then 
				Groep12kleur := 1;
			else
				Groep12kleur := 2;
			End_If
	
	//*****************Modus	
		
		if flGroep2AanUit then	
			if flGroep2 then
				if flGroep2VVofConv then			
					Groep3Modus := 2;
					Groep4Modus := 2;
					Groep5Modus := 2;
					Groep11Modus := 2;
				else
					Groep3Modus := 1;
					Groep4Modus := 1;
					Groep5Modus := 1;
					Groep11Modus := 1;
				end_if
			else			
				Groep3Modus := -2;
				Groep4Modus := -2;
				Groep5Modus := -2;
				Groep11Modus := -2;
			End_If
		else
				Groep3Modus := 0;
				Groep4Modus := 0;
				Groep5Modus := 0;
				Groep11Modus := 0;
				Groep2kleur := 0;
		End_If
	
		if flGroep7AanUit then		
			if flGroep7 then 
				Groep7Modus := 1;
			else
				Groep7Modus := -1;
			End_If
		else
				Groep7Modus := 0;
		End_If
		
		if flGroep8AanUit then		
			if flGroep8 then 			
				Groep1Modus := 1;
				Groep2Modus := 1;
			else			
				Groep1Modus := -1;
				Groep2Modus := -1;
			End_If
		else
					Groep1Modus := 0;
				Groep2Modus := 0;
		End_If
	
		if flGroep9AanUit then		
			if flGroep9 then 
				if flGroep9VVofConv then			
					Groep9Modus := 2;
					Groep8Modus := 2;
					Groep10Modus := 2;
				else
					Groep9Modus := 1;
					Groep8Modus := 1;
					Groep10Modus := 1;
				End_If
			else
				Groep9Modus := -2;
				Groep8Modus := -2;
				Groep10Modus := -2;
			End_If
		else
				Groep9Modus := 0;
				Groep8Modus := 0;
				Groep10Modus := 0;
		End_If
	
		if flGroep12AanUit then			
			if flGroep12 then 
				if flGroep12VVofConv then			
					Groep12Modus := 2;
					Groep13Modus := 2;
					Groep15Modus := 2;
					Groep17Modus := 2;
				else
					Groep12Modus := 1;
					Groep13Modus := 1;
					Groep15Modus := 1;
					Groep17Modus := 1;
				End_If
			else
				Groep12Modus := -2;
				Groep13Modus := -2;
				Groep15Modus := -2;
				Groep17Modus := -2;
			End_If
		else
			Groep12Modus := 0;
			Groep13Modus := 0;
			Groep15Modus := 0;
			Groep17Modus := 0;
		End_If
		
	else
		Groep2kleur := 0;
		Groep7kleur := 0;
		Groep8kleur := 0;
		Groep9kleur := 0;
		Groep12kleur := 0;
	End_If
		
				
	End_While;

End_Task

Task tError Autorun
//*************************************Errors****************************************
	While True Do
//*************************************Ft01_ZoutniveauLaag****************************************
		if not ctZoutLaag then
			Ft01_ZoutniveauLaag := true;
		else
			Ft01_ZoutniveauLaag := False;
		End_If;
//*************************************Ft02_GeenComunicatie****************************************
	
//*************************************Ft03_Brand****************************************
		if not ctBrand then
			Ft03_Brand := true;
		else
			Ft03_Brand := False;
		End_If;
//*************************************Ft04_Inbraak****************************************
		if not ctInbraak then
			Ft04_Inbraak := true;
		else
			Ft04_Inbraak := False;
		End_If;

//*************************************Ft05_DeurPlatinaOpen****************************************
		if not ctDeurPlatina then
			Ft05_DeurPlatinaOpen := true;
		else
			Ft05_DeurPlatinaOpen := False;
		End_If;

//*************************************Ft06_WaterlekZoutvat****************************************
		if not ctZoutVatLek then
			Ft06_WaterlekZoutvat := true;
		else
			Ft06_WaterlekZoutvat := False;
		End_If;
//*************************************Ft07_24VDCMotoren****************************************		
		if not Mot24VOke then
			Ft07_24VDCMotoren := True;
		else
			Ft07_24VDCMotoren := False;
		End_if;
	
//*************************************foutaanwezig****************************************		
		if Ft01_ZoutniveauLaag or Ft02_GeenComunicatie or Ft03_Brand or Ft04_Inbraak or Ft05_DeurPlatinaOpen or Ft06_WaterlekZoutvat or Ft07_24VDCMotoren then
			blnoAlarm := False;
			blAlarm := True
		end_if;
		if not Ft01_ZoutniveauLaag and not Ft02_GeenComunicatie  and not Ft03_Brand  and not Ft04_Inbraak  and not Ft05_DeurPlatinaOpen  and not Ft06_WaterlekZoutvat and not Ft07_24VDCMotoren then
			blnoAlarm := True;
			blAlarm := False
		end_if;

	End_While;
	
End_Task


