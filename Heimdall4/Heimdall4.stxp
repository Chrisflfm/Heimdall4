Var
// *********************In en outputs*********************************
//Digitaal Input
	ctV1Dicht:		Bool	at %IX 100000101; //Venster 1 dicht
	ctV2Dicht:		Bool	at %IX 100000102; //Venster 2 dicht
	ctV3Dicht:		Bool	at %IX 100000103; //Venster 3 dicht
	ctV4Dicht:		Bool	at %IX 100000104; //Vensteer4 dicht
	ctV5Dicht:		Bool	at %IX 100000105; //Venster 5 dicht
	ctV6Dicht:		Bool	at %IX 100000106; //Venster 6 dicht
	ctV7Dicht:		Bool	at %IX 100000107; //Venster 7 dicht
	ctV8Dicht:		Bool	at %IX 100000108; //Venster 8 dicht
	ctV9Dicht:		Bool	at %IX 100000109; //Venster 9 dicht
	ctV10Dicht:		Bool	at %IX 100000110; //Venster 10 dicht
	ctV11Dicht:		Bool	at %IX 100000111; //Venster 11 dicht
	ctV12Dicht:		Bool	at %IX 100000112; //Venster 12 dicht
	ctV13Dicht:		Bool	at %IX 100000113; //Venster 13 dicht
	ctV14Dicht:		Bool	at %IX 100000114; //Venster 14 dicht
	ctV15Dicht:		Bool	at %IX 100000115; //Venster 15 dicht
	ctV16Dicht:		Bool	at %IX 100000116; //Venster 16 dicht
	
	ctV17Dicht:		Bool	at %IX 100000201; //Venster 17 dicht
	ctV18Dicht:		Bool	at %IX 100000202; //Venster 18 dicht
	ctRegen1:		Bool	at %IX 100000203; //Regensensor nr 1
	ctRegen2:		Bool	at %IX 100000204; //Regensensor nr 2
	ctSchemer:		Bool	at %IX 100000205; //Schemerschakelaar
	ctAlarmAan:		Bool	at %IX 100000206; //Alarm ingeschakeld
	ctAlarmUit:		Bool	at %IX 100000207; //Alarm uitgeschakeld
	ctBrand:		Bool	at %IX 100000208; //Brand
	ctInbraak:		Bool	at %IX 100000209; //Inbraak TOM
	ctDeurPlatina:	Bool	at %IX 100000210; //Deur luifel Platina open
	ctPoortDicht:	Bool	at %IX 100000211; //Buiten poort dicht
	ctZoutLaag:		Bool	at %IX 100000212; //Laag zoutniveau ontharder
	ctZoutVatLek:	Bool	at %IX 100000213; //Lek in zoutvat ontharder
	Reserve1:		Bool	at %IX 100000214; //Reserve
	Reserve2:		Bool	at %IX 100000215; //Reserve
	Reserve3:		Bool	at %IX 100000216; //Reserve
	
	
//Digitaal Output	
	hrVenster1:		Bool	at %QX 100000301; //Venster 1 activeren
	hrVenster2:		Bool	at %QX 100000302; //Venster 2 activeren
	hrVenster3:		Bool	at %QX 100000303; //Venster 3 activeren
	hrVenster4:		Bool	at %QX 100000304; //Venster 4 activeren
	hrVenster5:		Bool	at %QX 100000305; //Venster 5 activeren
	hrVenster6:		Bool	at %QX 100000306; //Venster 6 activeren
	hrVenster7:		Bool	at %QX 100000307; //Venster 7 activeren
	hrVenster8:		Bool	at %QX 100000308; //Venster 8 activeren
	hrVenster9:		Bool	at %QX 100000309; //Venster 9 activeren
	hrVenster10:	Bool	at %QX 100000310; //Venster 10 activeren
	hrVenster11:	Bool	at %QX 100000311; //Venster 11 activeren
	hrVenster12:	Bool	at %QX 100000312; //Venster 12 activeren
	hrVenster13:	Bool	at %QX 100000313; //Venster 13 activeren
	hrVenster14:	Bool	at %QX 100000314; //Venster 14 activeren
	hrVenster15:	Bool	at %QX 100000315; //Venster 15 activeren
	hrVenster16:	Bool	at %QX 100000316; //Venster 16 activeren
	
	hrVenster17:	Bool	at %QX 100000401; //Venster 17 activeren
	hrVenster18:	Bool	at %QX 100000402; //Venster 18 activeren
	hrZonnewering1:	Bool	at %QX 100000403; //Zonnewering 1 activeren
	hrZonnewering3:	Bool	at %QX 100000404; //Zonnewering 1 activeren
	hrZonnewering4:	Bool	at %QX 100000405; //Zonnewering 1 activeren
	hrZonnewering5:	Bool	at %QX 100000406; //Zonnewering 1 activeren
	hrZonnewering6:	Bool	at %QX 100000407; //Zonnewering 1 activeren
	hrZonnewering12:Bool	at %QX 100000408; //Zonnewering 1 activeren
	hrZonnewering13:Bool	at %QX 100000409; //Zonnewering 1 activeren
	hrZonnewering15:Bool	at %QX 100000410; //Zonnewering 1 activeren
	hrZonnewering16:Bool	at %QX 100000411;//Zonnewering 1 activeren
	hrZonnewering17:Bool	at %QX 100000412;//Zonnewering 1 activeren
	hrOpenDicht:	Bool	at %QX 100000413;//Polariteit omschakelen
	hrLampenTom:	Bool	at %QX 100000414;//Lampen op terrein TOM
	hrLampenPlatina:Bool	at %QX 100000415;//Lampen op terrein Platina + Industrieweg
	hrPoortTom:		Bool	at %QX 100000416;//Poort Tom open/dicht

//**********************Heimdall registers******************************
//Temperaturen
	ruimte_041_B2: 	Int		at %vl 1000100; //Temperatuur waarde van Heimdall
	ruimte_042_B3: 	Int		at %vl 1000101; //Temperatuur waarde van Heimdall
	ruimte_092_B4: 	Int		at %vl 1000102; //Temperatuur waarde van Heimdall
	ruimte_061_B5: 	Int		at %vl 1000103; //Temperatuur waarde van Heimdall
	ruimte_062_B6: 	Int		at %vl 1000104; //Temperatuur waarde van Heimdall
	ruimte_081_B7: 	Int		at %vl 1000105; //Temperatuur waarde van Heimdall
	ruimte_082_B8: 	Int		at %vl 1000106; //Temperatuur waarde van Heimdall
	ruimte_091_B9: 	Int		at %vl 1000107; //Temperatuur waarde van Heimdall
	Kasttemp1_B10: 		Int		at %vl 1000108; //Temperatuur waarde van Heimdall
	KastTempK2: 		Int		at %vl 1000109; //Temperatuur waarde van Heimdall
	ruimte_021_B20: 	Int		at %vl 1000110; //Temperatuur waarde van Heimdall
	ruimte_022_B21: 	Int		at %vl 1000111; //Temperatuur waarde van Heimdall
	ruimte_0141_B22: 	Int		at %vl 1000112; //Temperatuur waarde van Heimdall
	ruimte_0142_B23: 	Int		at %vl 1000113; //Temperatuur waarde van Heimdall
	ruimte_0151_B24: 	Int		at %vl 1000114; //Temperatuur waarde van Heimdall
	ruimte_0152_B25: 	Int		at %vl 1000115; //Temperatuur waarde van Heimdall
	ruimte_111_B29: 	Int		at %vl 1000116; //Temperatuur waarde van Heimdall
	ruimte_1101_B30: 	Int		at %vl 1000117; //Temperatuur waarde van Heimdall
	ruimte_1102_B31: 	Int		at %vl 1000118; //Temperatuur waarde van Heimdall
	ruimte_1103_B32: 	Int		at %vl 1000119; //Temperatuur waarde van Heimdall
	ruimte_111_B33: 	Int		at %vl 1000120; //Temperatuur waarde van Heimdall
	ruimte_121_B34: 	Int		at %vl 1000121; //Temperatuur waarde van Heimdall
	ruimte_122_B35: 	Int		at %vl 1000122; //Temperatuur waarde van Heimdall
	ruimte_131_B36: 	Int		at %vl 1000123; //Temperatuur waarde van Heimdall
	ruimte_132_B37: 	Int		at %vl 1000124; //Temperatuur waarde van Heimdall
	ruimte_141_B38: 	Int		at %vl 1000125; //Temperatuur waarde van Heimdall
	ruimte_171_B39: 	Int		at %vl 1000126; //Temperatuur waarde van Heimdall
	ruimte_172_B40: 	Int		at %vl 1000127; //Temperatuur waarde van Heimdall
	KastTemp3_B49: 		Int		at %vl 1000128; //Temperatuur waarde van Heimdall
	KastTemp4_B50: 		Int		at %vl 1000129; //Temperatuur waarde van Heimdall
	ruimte_19_B51: 		Int		at %vl 1000130; //Temperatuur waarde van Heimdall
//ActTemp
	ACTr_017_en_014: 	Int		at %vl 1000131; //Actuele zone temperatuur waarde van Heimdall
	ACTr_02_01:			Int		at %vl 1000132; //Actuele zone temperatuur waarde van Heimdall
	ACTr_05_09_Cnv3_4:	Int		at %vl 1000133; //Actuele zone temperatuur waarde van Heimdall
	ACTr_04_cnv1_2:		Int		at %vl 1000134; //Actuele zone temperatuur waarde van Heimdall
	ACTr_011_012_06:	Int		at %vl 1000135; //Actuele zone temperatuur waarde van Heimdall
	ACTr_015:			Int		at %vl 1000136; //Actuele zone temperatuur waarde van Heimdall
	ACTr_13_cnv5:		Int		at %vl 1000137; //Actuele zone temperatuur waarde van Heimdall
	ACTr_11_14_16:		Int		at %vl 1000138; //Actuele zone temperatuur waarde van Heimdall
	ACTr_12_cnv6:		Int		at %vl 1000139; //Actuele zone temperatuur waarde van Heimdall
	ACTr_08:			Int		at %vl 1000140; //Actuele zone temperatuur waarde van Heimdall
	ACTr_110_L_cnv7:	Int		at %vl 1000141; //Actuele zone temperatuur waarde van Heimdall
	ACTr_111:			Int		at %vl 1000142; //Actuele zone temperatuur waarde van Heimdall
	ACTr_17:			Int		at %vl 1000143; //Actuele zone temperatuur waarde van Heimdall
	ACTr_110_R:			Int		at %vl 1000144; //Actuele zone temperatuur waarde van Heimdall
//Setpunten
	SPr_017_en_014: 	Int		at %vl 1000145; //Setpunt zone voor Heimdall
	SPr_02_01:			Int		at %vl 1000146; //Setpunt zone voor Heimdall
	SPr_05_09_Cnv3_4:	Int		at %vl 1000147; //Setpunt zone voor Heimdall
	SPr_04_cnv1_2:		Int		at %vl 1000148; //Setpunt zone voor Heimdall
	SPr_011_012_06:		Int		at %vl 1000149; //Setpunt zone voor Heimdall
	SPr_015:			Int		at %vl 1000150; //Setpunt zone voor Heimdall
	SPr_13_cnv5:		Int		at %vl 1000151; //Setpunt zone voor Heimdall
	SPr_11_14_16:		Int		at %vl 1000152; //Setpunt zone voor Heimdall
	SPr_12_cnv6:		Int		at %vl 1000153; //Setpunt zone voor Heimdall
	SPr_08:				Int		at %vl 1000154; //Setpunt zone voor Heimdall
	SPr_110_L_cnv7:		Int		at %vl 1000155; //Setpunt zone voor Heimdall
	SPr_111:			Int		at %vl 1000156; //Setpunt zone voor Heimdall
	SPr_17:				Int		at %vl 1000157; //Setpunt zone voor Heimdall
	SPr_110_R:			Int		at %vl 1000158; //Setpunt zone voor Heimdall
//Opdrachten voor Heimdall
	KVr_017_en_014: 	Int		at %vl 1000159; //Koelen/verwarmen zone voor Heimdall
	KVr_02_01:			Int		at %vl 1000160; //Koelen/verwarmen zone voor Heimdall
	KVr_05_09_Cnv3_4:	Int		at %vl 1000161; //Koelen/verwarmen zone voor Heimdall
	KVr_04_cnv1_2:		Int		at %vl 1000162; //Koelen/verwarmen zone voor Heimdall
	KVr_011_012_06:		Int		at %vl 1000163; //Koelen/verwarmen zone voor Heimdall
	KVr_015:			Int		at %vl 1000164; //Koelen/verwarmen zone voor Heimdall
	KVr_13_cnv5:		Int		at %vl 1000165; //Koelen/verwarmen zone voor Heimdall
	KVr_11_14_16:		Int		at %vl 1000166; //Koelen/verwarmen zone voor Heimdall
	KVr_12_cnv6:		Int		at %vl 1000167; //Koelen/verwarmen zone voor Heimdall
	KVr_08:				Int		at %vl 1000168; //Koelen/verwarmen zone voor Heimdall
	KVr_110_L_cnv7:		Int		at %vl 1000169; //Koelen/verwarmen zone voor Heimdall
	KVr_111:			Int		at %vl 1000170; //Koelen/verwarmen zone voor Heimdall
	KVr_17:				Int		at %vl 1000171; //Koelen/verwarmen zone voor Heimdall
	KVr_110_R:			Int		at %vl 1000172; //Koelen/verwarmen zone voor Heimdall
	Ventileren:			Int		at %vl 1000173; //Ventileren aan (dakvensters open convectoren kleppen open volle snelheid)
	AllesToe:			Int		at %vl 1000174; //alle dakvensters dicht convectoren kleppen dicht
	
	
//**********************Programma variabelen en registers******************************
//Register numbers: 1000000 ... 1001999
// Flags
	blLampenAan:			Bool	at %MX 1;	//Alle lampen aan
	blLampen1Aan:			Bool	at %MX 2;	//Lampen kring 1 aan
	blLampen2Aan:			Bool	at %MX 3;	//Lampen kring 2 aan
	blLampen3Aan:			Bool	at %MX 4;	//Lampen kring 3 aan
	blAlleVenstersDicht: 	Bool	at %MX 5;	//Alle dakvensters sluiten
	blAlleVenstersOpen:		Bool	at %MX 6;	//Alle dakvensters openen
	blAlleZonweerDicht: 	Bool	at %MX 7;	//Alle zonneweringen openen
	blAlleZonweerOpen:		Bool	at %MX 8;	//Alle zonneweringen sluiten
	blPulsPoort:			Bool	at %MX 9;	//Puls naar poort
	blPoortOpen:			Bool	at %MX 10;	//Puls poort als gesloten
	blPoortToe:				Bool	at %MX 11;	//Puls poort als niet gesloten
	blOpenDicht:			Bool	at %MX 12;	//True = open
	blActiveerVenster:		Bool	at %MX 13;	//True = actief open of dicht
	blActiveerZonweer:	Bool	at %MX 14;	//True = actief open of dicht
	blAutoLampenAan:		Bool	at %MX 15;	//True = lampen aan als schemerschakelaar aan
	blManLampenAan:			Bool	at %MX 16;	//True = lampen aan in handbediening
	blVenster1:				Bool	at %MX 18;	//flag voor task veiligheden
	blVenster2:				Bool	at %MX 19;	//flag voor task veiligheden
	blVenster3:				Bool	at %MX 20;	//flag voor task veiligheden
	blVenster4:				Bool	at %MX 21;	//flag voor task veiligheden
	blVenster5:				Bool	at %MX 22;	//flag voor task veiligheden
	blVenster6:				Bool	at %MX 23;	//flag voor task veiligheden
	blVenster7:				Bool	at %MX 24;	//flag voor task veiligheden
	blVenster8:				Bool	at %MX 25;	//flag voor task veiligheden
	blVenster9:				Bool	at %MX 26;	//flag voor task veiligheden
	blVenster10:			Bool	at %MX 27;	//flag voor task veiligheden
	blVenster11:			Bool	at %MX 28;	//flag voor task veiligheden
	blVenster12:			Bool	at %MX 29;	//flag voor task veiligheden
	blVenster13:			Bool	at %MX 30;	//flag voor task veiligheden
	blVenster14:			Bool	at %MX 31;	//flag voor task veiligheden
	blVenster15:			Bool	at %MX 32;	//flag voor task veiligheden
	blVenster16:			Bool	at %MX 33;	//flag voor task veiligheden
	blVenster17:			Bool	at %MX 34;	//flag voor task veiligheden
	blVenster18:			Bool	at %MX 35;	//flag voor task veiligheden
	blZonnewering1:			Bool	at %MX 36;	//flag voor task veiligheden
	blZonnewering3:			Bool	at %MX 37;	//flag voor task veiligheden
	blZonnewering4:			Bool	at %MX 38;	//flag voor task veiligheden
	blZonnewering5:			Bool	at %MX 39;	//flag voor task veiligheden
	blZonnewering6:			Bool	at %MX 40;	//flag voor task veiligheden
	blZonnewering12:		Bool	at %MX 41;	//flag voor task veiligheden
	blZonnewering13:		Bool	at %MX 42;	//flag voor task veiligheden
	blZonnewering15:		Bool	at %MX 43;	//flag voor task veiligheden
	blZonnewering16:		Bool	at %MX 44;	//flag voor task veiligheden
	blZonnewering17:		Bool	at %MX 45;	//flag voor task veiligheden
	blLampenTom:			Bool	at %MX 46;	//flag voor task veiligheden
	blLampenPlatina:		Bool	at %MX 47;	//flag voor task veiligheden
	blPoortTom:				Bool	at %MX 48;	//flag voor task veiligheden
	blPoortTomOpen:			Bool	at %MX 49;	//flag voor task veiligheden
	blPoortTomtoe:			Bool	at %MX 50;	//flag voor task veiligheden
	blPoortTomIsOpen:		Bool	at %MX 51;	//flag voor task veiligheden
	blRegen:				Bool	at %MX 52;	//flag voor task veiligheden
	blPoort:				Bool	at %MX 53;	//flag voor task veiligheden
	blDoeVensterOpen:		Bool	at %MX 54;	//flag voor task veiligheden
	blDoeVensterToe:		Bool	at %MX 55;	//flag voor task veiligheden
	blDoeZonweerOpen:		Bool	at %MX 56;	//flag voor task veiligheden
	blDoeZonweerToe:		Bool	at %MX 57;	//flag voor task veiligheden

// Registers
	regActivatietijdvnstr:	Int		at %vl 1000000; //Tijd nodig om venster te openen of sluiten
	regActivatietijdzon:	Int		at %vl 1000001; //Tijd nodig om zonnewering te openen of sluiten
	regVensterNr:			Int		at %vl 1000002; //Nr van het venster dat gecomandeerd wordt
	regZonweerNr:			Int		at %vl 1000003; //Nr van de zonnewering die gecomandeerd wordt
	regVensterComm:			Int		at %vl 1000004; //Commando van het venster dat gecomandeerd wordt 0 = stop 1 = open 2 = dicht
	regZonweerComm:			Int		at %vl 1000005; //Commando van de zonnewering die gecomandeerd wordt 0 = stop 1 = open 2 = dicht
	regUurLampAan:			Int		at %vl 1000006; //
	regUurLampUit:			Int		at %vl 1000007; //
	regMinLampAan:			Int		at %vl 1000008; //
	regMinLampUit:			Int		at %vl 1000009; //
	regUurPoortOpen:		Int		at %vl 1000010; //
	regMinPoortOpen:		Int		at %vl 1000011; //
//**********************RTC**********************************************
	Milliseconds:			Int		at %vl 102910; //
	Seconds:				Int		at %vl 102911; //
	Minutes:				Int		at %vl 102912; //
	Hours:					Int		at %vl 102913; //
	Weekday:				Int		at %vl 102914; //Weekday (0 = Sunday)
	Day:					Int		at %vl 102915; //
	Month:					Int		at %vl 102916; //
	Year:					Int		at %vl 102917; //
	
//**********************Fouten*******************************************
	Ft01_ZoutniveauLaag:	Bool	at %MX 100;//Zout niveau in ontharder laag
	Ft02_GeenComunicatie:	Bool	at %MX 101;//Geen comuinicatie met Heimdall
	Ft03_Brand:				Bool	at %MX 102;//Brand alarm bij TOM
	Ft04_Inbraak:			Bool	at %MX 103;//Inbraak alarm bij TOM
	Ft05_DeurPlatinaOpen:	Bool	at %MX 104;//Deur naar leufel Platina open
	Ft06_WaterlekZoutvat:	Bool	at %MX 105;//Water in lekbak ontharder

//**********************Timers********************************************
	stVensters: 			Timer;
	stPoortPuls: 			Timer;
	stPoortOpen: 			Timer;

End_var

Function ResetOutputFlags()
	blVenster1 := False;
	blVenster2 := False;
	blVenster3 := False;
	blVenster4 := False;
	blVenster5 := False;
	blVenster6 := False;
	blVenster7 := False;
	blVenster8 := False;
	blVenster9 := False;
	blVenster10 := False;
	blVenster11 := False;
	blVenster12 := False;
	blVenster13 := False;
	blVenster14 := False;
	blVenster15 := False;
	blVenster16 := False;
	blVenster17 := False;
	blVenster18 := False;
	blOpenDicht := False
End_Function;

Function OpenSluitVensters (Open: int)
	if Open > 0 then
		blOpenDicht := True;
	else
		blOpenDicht := False;
	End_If;
	blVenster1 := true;
	blVenster2 := true;
	blVenster3 := true;
	blVenster4 := true;
	blVenster5 := true;
	blVenster6 := true;
	blVenster7 := true;
	blVenster8 := true;
	blVenster9 := true;
	blVenster10 := true;
	blVenster11 := true;
	blVenster12 := true;
	blVenster13 := true;
	blVenster14 := true;
	blVenster15 := true;
	blVenster16 := true;
	blVenster17 := true;
	blVenster18 := true;

	TimerStart(stVensters,T#10s);//regActivatietijdvnstr);// Timer is set to 6 s and started.
   	When TimerEnd(stVensters) or blActiveerVenster = False Continue; // When the time has elapsed, the program continues here

	blVenster1 := False;
	blVenster2 := False;
	blVenster3 := False;
	blVenster4 := False;
	blVenster5 := False;
	blVenster6 := False;
	blVenster7 := False;
	blVenster8 := False;
	blVenster9 := False;
	blVenster10 := False;
	blVenster11 := False;
	blVenster12 := False;
	blVenster13 := False;
	blVenster14 := False;
	blVenster15 := False;
	blVenster16 := False;
	blVenster17 := False;
	blVenster18 := False;
	blOpenDicht := False;

End_Function;

Task tMain Autorun
//Init
//Reset registers
	Ventileren:=0;
	AllesToe:=0;
	regVensterComm:=0;
	regZonweerComm:=0;
//Reset flags
	blLampenAan := False;
	blLampen1Aan := False;
	blLampen2Aan := False;
	blLampen3Aan := False;
	blAutoLampenAan := False;
	blManLampenAan := False;
	blAlleVenstersDicht := False;
	blAlleVenstersOpen := False;
	blAlleZonweerDicht := False;
	blAlleZonweerOpen := False;
	blPulsPoort := False;
	blPoortOpen := False;
	blPoortToe := False;
	blVenster1 := False;
	blVenster2 := False;
	blVenster3 := False;
	blVenster4 := False;
	blVenster5 := False;
	blVenster6 := False;
	blVenster7 := False;
	blVenster8 := False;
	blVenster9 := False;
	blVenster10 := False;
	blVenster11 := False;
	blVenster12 := False;
	blVenster13 := False;
	blVenster14 := False;
	blVenster15 := False;
	blVenster16 := False;
	blVenster17 := False;
	blVenster18 := False;
	blOpenDicht := False;
	blPoortTomOpen := False;
	blPoortTomToe := False;
	blRegen := False;
//Reset outputs
	hrVenster1 := False;
	hrVenster2 := False;
	hrVenster3 := False;
	hrVenster4 := False;
	hrVenster5 := False;
	hrVenster6 := False;
	hrVenster7 := False;
	hrVenster8 := False;
	hrVenster9 := False;
	hrVenster10 := False;
	hrVenster11 := False;
	hrVenster12 := False;
	hrVenster13 := False;
	hrVenster14 := False;
	hrVenster15 := False;
	hrVenster16 := False;
	hrVenster17 := False;
	hrZonnewering1 := False;
	hrZonnewering3 := False;
	hrZonnewering4 := False;
	hrZonnewering5 := False;
	hrZonnewering6 := False;
	hrZonnewering12 := False;
	hrZonnewering13 := False;
	hrZonnewering15 := False;
	hrZonnewering16 := False;
	hrZonnewering17 := False;
	hrOpenDicht := False;
	hrLampenTom := False;
	hrLampenPlatina := False;
	hrPoortTom := False;
//Reset fouten
	Ft01_ZoutniveauLaag := False;
	Ft02_GeenComunicatie := False;
	Ft03_Brand := False;
	Ft04_Inbraak := False;
	Ft05_DeurPlatinaOpen := False;
	Ft06_WaterlekZoutvat := False;
//**************************************Start Main loop**************************************
	While True Do

// open of dicht
		if (regVensterNr !=0 and blDoeVensterOpen and not blRegen) or (regZonweerNr !=0 and blDoeZonweerOpen)  then
			blOpenDicht := True;
		else
			blOpenDicht := False;
		End_If;
//*************************************sturing dakvensters***************************************
// Alle vensters dicht
		if blAlleVenstersDicht then
			ResetOutputFlags();
			OpenSluitVensters(0);
			blAlleVenstersDicht := False;
		End_If;
// Alle vensters open
		if blAlleVenstersOpen then
			ResetOutputFlags();
			OpenSluitVensters(1);
			blAlleVenstersOpen := False;
		End_If;

// Venster open/dicht
		if regVensterNr	==0 then
			blDoeVensterOpen := False;
			blDoeVensterToe := False;
		End_if;
			
		if blDoeVensterOpen or blDoeVensterToe then
			case regVensterNr of
				1:	blVenster1 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdvnstr);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerVenster = False Continue; // When the time has elapsed, the program continues here
		 			blVenster1 := False;
					//blDoeVensterOpen := False;
					//blDoeVensterToe := False;
					break;
				
		      	2:	blVenster2 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdvnstr);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerVenster = False Continue; // When the time has elapsed, the program continues here
		 			blVenster2 := False;
					//blDoeVensterOpen := False;
					//blDoeVensterToe := False;
					break;
				
				3:	blVenster3 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdvnstr);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerVenster = False Continue; // When the time has elapsed, the program continues here
		 			blVenster3 := False;
					//blDoeVensterOpen := False;
					//blDoeVensterToe := False;
					break;
				
				4:	blVenster4 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdvnstr);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerVenster = False Continue; // When the time has elapsed, the program continues here
		 			blVenster4 := False;
					//blDoeVensterOpen := False;
					//blDoeVensterToe := False;
					break;
				
				5:	blVenster5 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdvnstr);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerVenster = False Continue; // When the time has elapsed, the program continues here
		 			blVenster5 := False;
					//blDoeVensterOpen := False;
					//blDoeVensterToe := False;
					break;
				
		  		6:	blVenster6 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdvnstr);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerVenster = False Continue; // When the time has elapsed, the program continues here
		 			blVenster6 := False;
					//blDoeVensterOpen := False;
					//blDoeVensterToe := False;
					break;
				
		 		7:	blVenster7 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdvnstr);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerVenster = False Continue; // When the time has elapsed, the program continues here
		 			blVenster7 := False;
					//blDoeVensterOpen := False;
					//blDoeVensterToe := False;
					break;
				
				8:	blVenster8 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdvnstr);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerVenster = False Continue; // When the time has elapsed, the program continues here
		 			blVenster8 := False;
					//blDoeVensterOpen := False;
					//blDoeVensterToe := False;
					break;
				
				9:	blVenster9 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdvnstr);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerVenster = False Continue; // When the time has elapsed, the program continues here
		 			blVenster9 := False;
					//blDoeVensterOpen := False;
					//blDoeVensterToe := False;
					break;
				
				10:	blVenster10 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdvnstr);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerVenster = False Continue; // When the time has elapsed, the program continues here
		 			blVenster10 := False;
					//blDoeVensterOpen := False;
					//blDoeVensterToe := False;
					break;
				
				11:	blVenster11 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdvnstr);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerVenster = False Continue; // When the time has elapsed, the program continues here
		 			blVenster11 := False;
					//blDoeVensterOpen := False;
					//blDoeVensterToe := False;
					break;
				
				12:	blVenster12 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdvnstr);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerVenster = False Continue; // When the time has elapsed, the program continues here
		 			blVenster12 := False;
					//blDoeVensterOpen := False;
					//blDoeVensterToe := False;
					break;
				
				13:	blVenster13 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdvnstr);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerVenster = False Continue; // When the time has elapsed, the program continues here
		 			blVenster13 := False;
					//blDoeVensterOpen := False;
					//blDoeVensterToe := False;
					break;
				
				14:	blVenster14 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdvnstr);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerVenster = False Continue; // When the time has elapsed, the program continues here
		 			blVenster14 := False;
					//blDoeVensterOpen := False;
					//blDoeVensterToe := False;
					break;
				
				15:	blVenster15 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdvnstr);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerVenster = False Continue; // When the time has elapsed, the program continues here
		 			blVenster15 := False;
					//blDoeVensterOpen := False;
					//blDoeVensterToe := False;
					break;
				
				16:	blVenster16 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdvnstr);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerVenster = False Continue; // When the time has elapsed, the program continues here
		 			blVenster16 := False;
					//blDoeVensterOpen := False;
					//blDoeVensterToe := False;
					break;
				
				17:	blVenster17 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdvnstr);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerVenster = False Continue; // When the time has elapsed, the program continues here
		 			blVenster17 := False;
					//blDoeVensterOpen := False;
					//blDoeVensterToe := False;
					break;
				
				18:	blVenster18 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdvnstr);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerVenster = False Continue; // When the time has elapsed, the program continues here
		 			blVenster18 := False;
					//blDoeVensterOpen := False;
					//blDoeVensterToe := False;
					break;
			
				Else regVensterNr := -1;

			End_Case;
			
		End_if;
		
//**************************************sturing zonnewering**************************************
		if blDoeZonweerOpen or blDoeZonweerOpen then
			case regVensterNr of
				1:	blZonnewering1 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdzonweer);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerZonweer = False Continue; // When the time has elapsed, the program continues here
		 			blZonnewering1 := False;
					//blDoeZonweerOpen := False;
					//blDoeZonweerToe := False;
					break;
				
				3:	blZonnewering3 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdzonweer);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerZonweer = False Continue; // When the time has elapsed, the program continues here
		 			blZonnewering3 := False;
					//blDoeZonweerOpen := False;
					//blDoeZonweerToe := False;
					break;
				
				4:	blZonnewering4 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdzonweer);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerZonweer = False Continue; // When the time has elapsed, the program continues here
		 			blZonnewering4 := False;
					//blDoeZonweerOpen := False;
					//blDoeZonweerToe := False;
					break;
				
				5:	blZonnewering5 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdzonweer);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerZonweer = False Continue; // When the time has elapsed, the program continues here
		 			blZonnewering5 := False;
					//blDoeZonweerOpen := False;
					//blDoeZonweerToe := False;
					break;
				
				6:	blZonnewering6 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdzonweer);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerZonweer = False Continue; // When the time has elapsed, the program continues here
		 			blZonnewering6 := False;
					//blDoeZonweerOpen := False;
					//blDoeZonweerToe := False;
					break;
				
				12:	blZonnewering12 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdzonweer);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerZonweer = False Continue; // When the time has elapsed, the program continues here
		 			blZonnewering12 := False;
					//blDoeZonweerOpen := False;
					//blDoeZonweerToe := False;
					break;
				
				13:	blZonnewering13 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdzonweer);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerZonweer = False Continue; // When the time has elapsed, the program continues here
		 			blZonnewering13 := False;
					//blDoeZonweerOpen := False;
					//blDoeZonweerToe := False;
					break;
				
				15:	blZonnewering15 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdzonweer);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerZonweer = False Continue; // When the time has elapsed, the program continues here
		 			blZonnewering15 := False;
					//blDoeZonweerOpen := False;
					//blDoeZonweerToe := False;
					break;
				
				16:	blZonnewering16 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdzonweer);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerZonweer = False Continue; // When the time has elapsed, the program continues here
		 			blZonnewering16 := False;
					//blDoeZonweerOpen := False;
					//blDoeZonweerToe := False;
					break;
				
				17:	blZonnewering17 := true;
					TimerStart(stVensters,T#10s);//regActivatietijdzonweer);// Timer is set to 6 s and started.
		       		When TimerEnd(stVensters) or blActiveerZonweer = False Continue; // When the time has elapsed, the program continues here
		 			blZonnewering17 := False;
					//blDoeZonweerOpen := False;
					//blDoeZonweerToe := False;
					break;
				
				Else regZonweerNr := -1;

			End_Case;
			
		End_if;

//*************************************sturing Lampen**********************************************
	
		If blLampen1Aan then
			blManLampenAan := True
	 	End_If;
	
		If blLampen2Aan or blLampen3Aan then
			blLampenPlatina := True;
		End_If;
		
		If blLampenAan then
			blManLampenAan := True
	 	End_If;
	
		if not (blLampen1Aan or blLampen2Aan or blLampen2Aan) then
			blManLampenAan := False
		End_If;
		
		if Hours >= regUurLampAan and Minutes >= regMinLampAan then
			blAutoLampenAan := true;
		End_If;

		if Hours <= regUurLampUit and Minutes <= regMinLampUit then
			blAutoLampenAan := False;
			blManLampenAan := False
		End_If;
	
		if (blAutoLampenAan and ctSchemer) or blManLampenAan then
			if blAutoLampenAan or blLampen1Aan Then
				blLampenTom := True;
			End_If;
			if blAutoLampenAan or blLampen2Aan Then
				blLampenPlatina := True;
			End_If;
		else
			blLampenPlatina := False;
			blLampenTom := False;
		End_If;
		
//*************************************Sturing Poort**********************************************

		if Hours >= regUurPoortOpen and Minutes >= regMinPoortOpen and Weekday > 0 and Weekday < 7 and  ctPoortDicht and not blPoortTomIsOpen then
			blPoortTomOpen := True;
			blPoortTomIsOpen := True;
			TimerStart(stPoortOpen,T#30m);//regActivatietijdzonweer);// Timer is set to 6 s and started.
		End_If;
		
		If Hours < regUurPoortOpen then
			blPoortTomIsOpen := False;
		End_If;
		
		if TimerEnd(stPoortOpen) and ctAlarmAan then
			blPoortTomtoe := True
		End_If;
		
		if not blPoortTomOpen and not blPoortTomtoe then
			blPoort := False
		End_If;
		
		if blPoortTomOpen and not ctPoortDicht then 			
			 blPoort := true
		End_If;
		
		if blPoortTomtoe and not ctPoortDicht then 			
			 blPoort := True
		End_If;
		
		if blPoort then
			blPoortTom := true;
			TimerStart(stPoortPuls,T#1s);
	     	When TimerEnd(stPoortPuls) or blActiveerZonweer = False Continue;
	 		blPoortTom := False;
			blPoort := False;
			blPoortTomOpen := False;
			blPoortTomToe := False;	
		End_If;
	
	End_While;

End_Task

Task tVeiligheden Autorun
//*************************************tVeiligheden****************************************
	While True Do
//*************************************Alarm**********************************************
//Alarm
		if ctBrand then
			blPoortTomIsOpen := True;
			blLampenPlatina := True;
			blLampenTom := True;
		End_If;
	
		if ctInbraak then
			blPoortTomtoe := True;
			blLampenTom := True;
		End_If;
//Regen
		if not ctRegen1 or not ctRegen2 then
			blRegen := True;
		End_If;
		if not ctRegen1 and not ctRegen2 then
			blRegen := False;
		End_If;
//Vensters en zonnewering stoppen
		if blDoeVensterOpen or blDoeVensterToe then
			blActiveerVenster := true;
		else
			blActiveerVenster := False;
		End_if;
		
		if blDoeZonweerOpen or blDoeZonweerToe then
			blActiveerZonweer := true;
		else
			blActiveerZonweer := False;
		End_if;
//Alle vensters dicht
		if not ctAlarmAan or blRegen then
			regZonweerNr := 0;
			regVensterNr := 0;
			blAlleVenstersDicht := True;
		End_If;
//*************************************Outputs**********************************************
		
		if blOpenDicht then
			hrOpenDicht := true
		else
			hrOpenDicht := false
		End_If;		

//dakvensters
		if not blVenster1 then
			hrVenster1 := False;
		End_If;		
		if blVenster1 and not hrOpenDicht and ctV1Dicht then
			hrVenster1 := False;
		End_If;		
		if blVenster1 and not hrOpenDicht and not ctV1Dicht then
			hrVenster1 := true;
		End_If;
		if blVenster1 and hrOpenDicht then
			hrVenster1 := true;
		End_If;
	
		if not blVenster2 then
			hrVenster2 := False;
		End_If;		
		if blVenster2 and not hrOpenDicht and ctV2Dicht then
			hrVenster2 := False;
		End_If;		
		if blVenster2 and not hrOpenDicht and not ctV2Dicht then
			hrVenster2 := true;
		End_If;
		if blVenster2 and hrOpenDicht then
			hrVenster2 := true;
		End_If;
	
		if not blVenster3 then
			hrVenster3 := False;
		End_If;		
		if blVenster3 and not hrOpenDicht and ctV3Dicht then
			hrVenster3 := False;
		End_If;		
		if blVenster3 and not hrOpenDicht and not ctV3Dicht then
			hrVenster3 := true;
		End_If;
		if blVenster3 and hrOpenDicht then
			hrVenster3 := true;
		End_If;	

		if not blVenster4 then
			hrVenster4 := False;
		End_If;		
		if blVenster4 and not hrOpenDicht and ctV4Dicht then
			hrVenster4 := False;
		End_If;		
		if blVenster4 and not hrOpenDicht and not ctV4Dicht then
			hrVenster4 := true;
		End_If;
		if blVenster4 and hrOpenDicht then
			hrVenster4 := true;
		End_If;

		if not blVenster5 then
			hrVenster5 := False;
		End_If;		
		if blVenster5 and not hrOpenDicht and ctV5Dicht then
			hrVenster5 := False;
		End_If;		
		if blVenster5 and not hrOpenDicht and not ctV5Dicht then
			hrVenster5 := true;
		End_If;
		if blVenster5 and hrOpenDicht then
			hrVenster5 := true;
		End_If;

		if not blVenster6 then
			hrVenster6 := False;
		End_If;		
		if blVenster6 and not hrOpenDicht and ctV6Dicht then
			hrVenster6 := False;
		End_If;		
		if blVenster6 and not hrOpenDicht and not ctV6Dicht then
			hrVenster6 := true;
		End_If;
		if blVenster6 and hrOpenDicht then
			hrVenster6 := true;
		End_If;

		if not blVenster7 then
			hrVenster7 := False;
		End_If;		
		if blVenster7 and not hrOpenDicht and ctV7Dicht then
			hrVenster7 := False;
		End_If;		
		if blVenster7 and not hrOpenDicht and not ctV7Dicht then
			hrVenster7 := true;
		End_If;
		if blVenster7 and hrOpenDicht then
			hrVenster7 := true;
		End_If;

		if not blVenster8 then
			hrVenster8 := False;
		End_If;		
		if blVenster8 and not hrOpenDicht and ctV8Dicht then
			hrVenster8 := False;
		End_If;		
		if blVenster8 and not hrOpenDicht and not ctV8Dicht then
			hrVenster8 := true;
		End_If;
		if blVenster8 and hrOpenDicht then
			hrVenster8 := true;
		End_If;

		if not blVenster9 then
			hrVenster9 := False;
		End_If;		
		if blVenster9 and not hrOpenDicht and ctV9Dicht then
			hrVenster9 := False;
		End_If;		
		if blVenster9 and not hrOpenDicht and not ctV9Dicht then
			hrVenster9 := true;
		End_If;
		if blVenster9 and hrOpenDicht then
			hrVenster9 := true;
		End_If;
	
		if not blVenster10 then
			hrVenster10 := False;
		End_If;		
		if blVenster10 and not hrOpenDicht and ctV10Dicht then
			hrVenster10 := False;
		End_If;		
		if blVenster10 and not hrOpenDicht and not ctV10Dicht then
			hrVenster10 := true;
		End_If;
		if blVenster1 and hrOpenDicht then
			hrVenster10 := true;
		End_If;
	
		if not blVenster11 then
			hrVenster11 := False;
		End_If;		
		if blVenster11 and not hrOpenDicht and ctV11Dicht then
			hrVenster11 := False;
		End_If;		
		if blVenster11 and not hrOpenDicht and not ctV11Dicht then
			hrVenster11 := true;
		End_If;
		if blVenster11 and hrOpenDicht then
			hrVenster11 := true;
		End_If;
	
		if not blVenster12 then
			hrVenster12 := False;
		End_If;		
		if blVenster12 and not hrOpenDicht and ctV12Dicht then
			hrVenster12 := False;
		End_If;		
		if blVenster12 and not hrOpenDicht and not ctV12Dicht then
			hrVenster12 := true;
		End_If;
		if blVenster12 and hrOpenDicht then
			hrVenster12 := true;
		End_If;
	
		if not blVenster13 then
			hrVenster13 := False;
		End_If;		
		if blVenster13 and not hrOpenDicht and ctV13Dicht then
			hrVenster13 := False;
		End_If;		
		if blVenster13 and not hrOpenDicht and not ctV13Dicht then
			hrVenster13 := true;
		End_If;
		if blVenster13 and hrOpenDicht then
			hrVenster13 := true;
		End_If;
	
		if not blVenster14 then
			hrVenster14 := False;
		End_If;		
		if blVenster14 and not hrOpenDicht and ctV14Dicht then
			hrVenster14 := False;
		End_If;		
		if blVenster14 and not hrOpenDicht and not ctV14Dicht then
			hrVenster14 := true;
		End_If;
		if blVenster14 and hrOpenDicht then
			hrVenster14 := true;
		End_If;
	
		if not blVenster15 then
			hrVenster15 := False;
		End_If;		
		if blVenster15 and not hrOpenDicht and ctV15Dicht then
			hrVenster15 := False;
		End_If;		
		if blVenster15 and not hrOpenDicht and not ctV15Dicht then
			hrVenster15 := true;
		End_If;
		if blVenster15 and hrOpenDicht then
			hrVenster15 := true;
		End_If;
	
		if not blVenster16 then
			hrVenster16 := False;
		End_If;		
		if blVenster16 and not hrOpenDicht and ctV16Dicht then
			hrVenster16 := False;
		End_If;		
		if blVenster16 and not hrOpenDicht and not ctV16Dicht then
			hrVenster16 := true;
		End_If;
		if blVenster16 and hrOpenDicht then
			hrVenster16 := true;
		End_If;
	
		if not blVenster17 then
			hrVenster17 := False;
		End_If;		
		if blVenster17 and not hrOpenDicht and ctV17Dicht then
			hrVenster17 := False;
		End_If;		
		if blVenster17 and not hrOpenDicht and not ctV17Dicht then
			hrVenster17 := true;
		End_If;
		if blVenster17 and hrOpenDicht then
			hrVenster17 := true;
		End_If;
	
		if not blVenster18 then
			hrVenster18 := False;
		End_If;		
		if blVenster18 and not hrOpenDicht and ctV18Dicht then
			hrVenster18 := False;
		End_If;		
		if blVenster18 and not hrOpenDicht and not ctV18Dicht then
			hrVenster18 := true;
		End_If;
		if blVenster18 and hrOpenDicht then
			hrVenster18 := true;
		End_If;

//Zonnewering

		if not blZonnewering3 then
			blZonnewering3 := False;
		End_If;		
		if blZonnewering3 and not hrOpenDicht then
			blZonnewering3 := False;
		End_If;		
		if blZonnewering3 and not hrOpenDicht then
			blZonnewering3 := true;
		End_If;
		if blZonnewering3 and hrOpenDicht then
			blZonnewering3 := true;
		End_If;

		if not blZonnewering4 then
			blZonnewering4 := False;
		End_If;		
		if blZonnewering4 and not hrOpenDicht then
			blZonnewering4 := False;
		End_If;		
		if blZonnewering4 and not hrOpenDicht then
			blZonnewering4 := true;
		End_If;
		if blZonnewering4 and hrOpenDicht then
			blZonnewering4 := true;
		End_If;		
		
		if not blZonnewering5 then
			blZonnewering5 := False;
		End_If;		
		if blZonnewering5 and not hrOpenDicht then
			blZonnewering5 := False;
		End_If;		
		if blZonnewering5 and not hrOpenDicht then
			blZonnewering5 := true;
		End_If;
		if blZonnewering5 and hrOpenDicht then
			blZonnewering5 := true;
		End_If;		
		
		if not blZonnewering6 then
			blZonnewering6 := False;
		End_If;		
		if blZonnewering6 and not hrOpenDicht then
			blZonnewering6 := False;
		End_If;		
		if blZonnewering6 and not hrOpenDicht then
			blZonnewering6 := true;
		End_If;
		if blZonnewering6 and hrOpenDicht then
			blZonnewering6 := true;
		End_If;		
		
		if not blZonnewering12 then
			blZonnewering12 := False;
		End_If;		
		if blZonnewering12 and not hrOpenDicht then
			blZonnewering12 := False;
		End_If;		
		if blZonnewering12 and not hrOpenDicht then
			blZonnewering12 := true;
		End_If;
		if blZonnewering12 and hrOpenDicht then
			blZonnewering12 := true;
		End_If;
		
		if not blZonnewering13 then
			blZonnewering13 := False;
		End_If;		
		if blZonnewering13 and not hrOpenDicht then
			blZonnewering13 := False;
		End_If;		
		if blZonnewering13 and not hrOpenDicht then
			blZonnewering13 := true;
		End_If;
		if blZonnewering13 and hrOpenDicht then
			blZonnewering13 := true;
		End_If;		
			
		if not blZonnewering15 then
			blZonnewering15 := False;
		End_If;		
		if blZonnewering15 and not hrOpenDicht then
			blZonnewering15 := False;
		End_If;		
		if blZonnewering15 and not hrOpenDicht then
			blZonnewering15 := true;
		End_If;
		if blZonnewering15 and hrOpenDicht then
			blZonnewering15 := true;
		End_If;	
		
		if not blZonnewering16 then
			blZonnewering16 := False;
		End_If;		
		if blZonnewering16 and not hrOpenDicht then
			blZonnewering16 := False;
		End_If;		
		if blZonnewering16 and not hrOpenDicht then
			blZonnewering16 := true;
		End_If;
		if blZonnewering16 and hrOpenDicht then
			blZonnewering16 := true;
		End_If;		
			
		if not blZonnewering17 then
			blZonnewering17 := False;
		End_If;		
		if blZonnewering17 and not hrOpenDicht then
			blZonnewering17 := False;
		End_If;		
		if blZonnewering17 and not hrOpenDicht then
			blZonnewering17 := true;
		End_If;
		if blZonnewering17 and hrOpenDicht then
			blZonnewering17 := true;
		End_If;	
				
//Lampen 
		if blLampenPlatina then
			hrLampenPlatina := true;
		else
			hrLampenPlatina := false;
		End_If;
	
		if blLampenTom then
			hrLampenTom := true;
		else
			hrLampenTom := false;
		End_If;
	
//Poort	
		if blPoortTom then
			hrPoortTom := true;
		else	
			hrPoortTom := False;
		End_If;

	End_While;

End_Task

Task tError Autorun
//*************************************Errors****************************************
	While True Do
//*************************************Ft01_ZoutniveauLaag****************************************
		if ctZoutLaag then
			Ft01_ZoutniveauLaag := true;
		else
			Ft01_ZoutniveauLaag := False;
		End_If;
//*************************************Ft02_GeenComunicatie****************************************
		Ft02_GeenComunicatie := False;
//*************************************Ft03_Brand****************************************
		if ctBrand then
			Ft03_Brand := true;
		else
			Ft03_Brand := False;
		End_If;
//*************************************Ft04_Inbraak****************************************
		if ctInbraak then
			Ft04_Inbraak := true;
		else
			Ft04_Inbraak := False;
		End_If;

//*************************************Ft05_DeurPlatinaOpen****************************************
		if ctDeurPlatina then
			Ft05_DeurPlatinaOpen := true;
		else
			Ft05_DeurPlatinaOpen := False;
		End_If;

//*************************************Ft06_WaterlekZoutvat****************************************
		if ctZoutVatLek then
			Ft06_WaterlekZoutvat := true;
		else
			Ft06_WaterlekZoutvat := False;
		End_If;

	End_While;
	
End_Task


