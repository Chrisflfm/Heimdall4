Var
// *********************In en outputs*********************************
//Digitaal Input
	ctV1Dicht:		Bool	at %IX 100000201; //Venster 1 dicht
	ctV2Dicht:		Bool	at %IX 100000202; //Venster 2 dicht
	ctV3Dicht:		Bool	at %IX 100000203; //Venster 3 dicht
	ctV4Dicht:		Bool	at %IX 100000204; //Vensteer4 dicht
	ctV5Dicht:		Bool	at %IX 100000205; //Venster 5 dicht
	ctV6Dicht:		Bool	at %IX 100000206; //Venster 6 dicht
	ctV7Dicht:		Bool	at %IX 100000207; //Venster 7 dicht
	ctV8Dicht:		Bool	at %IX 100000208; //Venster 8 dicht
	ctV9Dicht:		Bool	at %IX 100000209; //Venster 9 dicht
	ctV10Dicht:		Bool	at %IX 100000210; //Venster 10 dicht
	ctV11Dicht:		Bool	at %IX 100000211; //Venster 11 dicht
	ctV12Dicht:		Bool	at %IX 100000212; //Venster 12 dicht
	ctV13Dicht:		Bool	at %IX 100000213; //Venster 13 dicht
	ctV14Dicht:		Bool	at %IX 100000214; //Venster 14 dicht
	ctV15Dicht:		Bool	at %IX 100000215; //Venster 15 dicht
	ctV16Dicht:		Bool	at %IX 100000216; //Venster 16 dicht
	
	ctV17Dicht:		Bool	at %IX 100000301; //Venster 17 dicht
	ctV18Dicht:		Bool	at %IX 100000302; //Venster 18 dicht
	ctRegen1:		Bool	at %IX 100000303; //Regensensor nr 1
	ctRegen2:		Bool	at %IX 100000304; //Regensensor nr 2
	ctSchemer:		Bool	at %IX 100000305; //Schemerschakelaar
	ctAlarmAan:		Bool	at %IX 100000307; //Alarm ingeschakeld
	ctAlarmUit:		Bool	at %IX 100000306; //Alarm uitgeschakeld
	ctBrand:		Bool	at %IX 100000308; //Brand
	ctInbraak:		Bool	at %IX 100000309; //Inbraak TOM
	ctDeurPlatina:	Bool	at %IX 100000310; //Deur luifel Platina open
	ctPoortDicht:	Bool	at %IX 100000311; //Buiten poort dicht
	ctZoutLaag:		Bool	at %IX 100000312; //Laag zoutniveau ontharder
	ctZoutVatLek:	Bool	at %IX 100000313; //Lek in zoutvat ontharder
	Reserve1:		Bool	at %IX 100000314; //Reserve
	Reserve2:		Bool	at %IX 100000315; //Reserve
	ctpltnlmpAan:	Bool	at %IX 100000316; //
	Mot24VOke:		Bool	at %IX 100000601; //24VDC2 motoren oke
	
	
//Digitaal Output	
	hrVenster1:		Bool	at %QX 100000401; //Venster 1 activeren
	hrVenster2:		Bool	at %QX 100000402; //Venster 2 activeren
	hrVenster3:		Bool	at %QX 100000403; //Venster 3 activeren
	hrVenster4:		Bool	at %QX 100000404; //Venster 4 activeren
	hrVenster5:		Bool	at %QX 100000405; //Venster 5 activeren
	hrVenster6:		Bool	at %QX 100000406; //Venster 6 activeren
	hrVenster7:		Bool	at %QX 100000407; //Venster 7 activeren
	hrVenster8:		Bool	at %QX 100000408; //Venster 8 activeren
	hrVenster9:		Bool	at %QX 100000409; //Venster 9 activeren
	hrVenster10:	Bool	at %QX 100000410; //Venster 10 activeren
	hrVenster11:	Bool	at %QX 100000411; //Venster 11 activeren
	hrVenster12:	Bool	at %QX 100000412; //Venster 12 activeren
	hrVenster13:	Bool	at %QX 100000413; //Venster 13 activeren
	hrVenster14:	Bool	at %QX 100000414; //Venster 14 activeren
	hrVenster15:	Bool	at %QX 100000415; //Venster 15 activeren
	hrVenster16:	Bool	at %QX 100000416; //Venster 16 activeren
	
	hrVenster17:	Bool	at %QX 100000501; //Venster 17 activeren
	hrVenster18:	Bool	at %QX 100000502; //Venster 18 activeren
	hrZonnewering1:	Bool	at %QX 100000503; //Zonnewering 1 activeren
	hrZonnewering3:	Bool	at %QX 100000504; //Zonnewering 1 activeren
	hrZonnewering4:	Bool	at %QX 100000505; //Zonnewering 1 activeren
	hrZonnewering5:	Bool	at %QX 100000506; //Zonnewering 1 activeren
	hrZonnewering6:	Bool	at %QX 100000507; //Zonnewering 1 activeren
	hrZonnewering12:Bool	at %QX 100000508; //Zonnewering 1 activeren
	hrZonnewering13:Bool	at %QX 100000509; //Zonnewering 1 activeren
	hrZonnewering15:Bool	at %QX 100000510; //Zonnewering 1 activeren
	hrZonnewering16:Bool	at %QX 100000511;//Zonnewering 1 activeren
	hrZonnewering17:Bool	at %QX 100000512;//Zonnewering 1 activeren
	hrOpenDicht:	Bool	at %QX 100000513;//Polariteit omschakelen
	hrLampenTom:	Bool	at %QX 100000514;//Lampen op terrein TOM
	hrLampenPlatina:Bool	at %QX 100000515;//Lampen op terrein Platina + Industrieweg
	hrPoortTom:		Bool	at %QX 100000516;//Poort Tom open/dicht

	
//**********************Programma variabelen en registers******************************

// Flags
	blLampenAan:			Bool	at %MX 1;	//Alle lampen aan
	blLampen1Aan:			Bool	at %MX 2;	//Lampen kring 1 aan
	blLampen2Aan:			Bool	at %MX 3;	//Lampen kring 2 aan
	blLampen3Aan:			Bool	at %MX 4;	//Lampen kring 3 aan
	blAlleVenstersDicht: 	Bool	at %MX 5;	//Alle dakvensters sluiten
	blAlleVenstersOpen:		Bool	at %MX 6;	//Alle dakvensters openen
	blAlleZonweerDicht: 	Bool	at %MX 7;	//Alle zonneweringen openen
	blAlleZonweerOpen:		Bool	at %MX 8;	//Alle zonneweringen sluiten
	blPulsPoort:			Bool	at %MX 9;	//Puls naar poort
	blPoortTomIsOpen:		Bool	at %MX 10;	//poort is 's morgens opgestuurd
	blPoortTom:				Bool	at %MX 11;	//flag voor output
	blOpenDicht:			Bool	at %MX 12;	//Voor ompool relais
	blTest:					Bool	at %MX 13;	//
	blDroog:				Bool	at %MX 14;	//Voor pannel, het is droog buiten
	blAutoLampenAan:		Bool	at %MX 15;	//True = lampen aan als schemerschakelaar aan
	blManLampenAan:			Bool	at %MX 16;	//True = lampen aan in handbediening
	blVenster1:				Bool	at %MX 18;	//flag voor task veiligheden
	blVenster2:				Bool	at %MX 19;	//flag voor task veiligheden
	blVenster3:				Bool	at %MX 20;	//flag voor task veiligheden
	blVenster4:				Bool	at %MX 21;	//flag voor task veiligheden
	blVenster5:				Bool	at %MX 22;	//flag voor task veiligheden
	blVenster6:				Bool	at %MX 23;	//flag voor task veiligheden
	blVenster7:				Bool	at %MX 24;	//flag voor task veiligheden
	blVenster8:				Bool	at %MX 25;	//flag voor task veiligheden
	blVenster9:				Bool	at %MX 26;	//flag voor task veiligheden
	blVenster10:			Bool	at %MX 27;	//flag voor task veiligheden
	blVenster11:			Bool	at %MX 28;	//flag voor task veiligheden
	blVenster12:			Bool	at %MX 29;	//flag voor task veiligheden
	blVenster13:			Bool	at %MX 30;	//flag voor task veiligheden
	blVenster14:			Bool	at %MX 31;	//flag voor task veiligheden
	blVenster15:			Bool	at %MX 32;	//flag voor task veiligheden
	blVenster16:			Bool	at %MX 33;	//flag voor task veiligheden
	blVenster17:			Bool	at %MX 34;	//flag voor task veiligheden
	blVenster18:			Bool	at %MX 35;	//flag voor task veiligheden
	blZonnewering1:			Bool	at %MX 36;	//flag voor task veiligheden
	blZonnewering3:			Bool	at %MX 37;	//flag voor task veiligheden
	blZonnewering4:			Bool	at %MX 38;	//flag voor task veiligheden
	blZonnewering5:			Bool	at %MX 39;	//flag voor task veiligheden
	blZonnewering6:			Bool	at %MX 40;	//flag voor task veiligheden
	blZonnewering12:		Bool	at %MX 41;	//flag voor task veiligheden
	blZonnewering13:		Bool	at %MX 42;	//flag voor task veiligheden
	blZonnewering15:		Bool	at %MX 43;	//flag voor task veiligheden
	blZonnewering16:		Bool	at %MX 44;	//flag voor task veiligheden
	blZonnewering17:		Bool	at %MX 45;	//flag voor task veiligheden
	blLampenTom:			Bool	at %MX 46;	//flag voor task veiligheden
	blLampenPlatina:		Bool	at %MX 47;	//flag voor task veiligheden
	blSetClock:				Bool	at %MX 48;	//set realtime clock
	blVentilatie:			Bool	at %MX 49;	//vantilatie aan uit voor paneel
	blklepToe:				Bool	at %MX 50;	//alles dicht aan uit voor paneel
	res51:					Bool	at %MX 51;	//
	blRegen:				Bool	at %MX 52;	//flag voor task veiligheden
	blPoort:				Bool	at %MX 53;	//flag voor task veiligheden
	blVensterDicht: 		Bool	at %MX 54;	//Alle dakvensters sluiten
	blVensterOpen:			Bool	at %MX 55;	//Alle dakvensters openen
	blZonweerDicht: 		Bool	at %MX 56;	//Alle zonneweringen openen
	blZonweerOpen:			Bool	at %MX 57;	//Alle zonneweringen sluiten
	blLicht:				Bool	at %MX 58;	//Voor pannel, het is licht buiten
	blDonker:				Bool	at %MX 59;	//Voor pannel, het is donker buiten
	blnoAlarm:				Bool	at %MX 60;	//Voor pannel, er is geen alarm
	blAlarm:				Bool	at %MX 61;	//Voor pannel, er is alarm
	blAlleVenstersToe:		Bool	at %MX 62;	//vereenvoudeging
	blPoolOm:				Bool	at %MX 63;	//vereenvoudeging
	blNotAlarmAan:			Bool	at %MX 64;	//vereenvoudeging
	blNotAlarmUit:			Bool	at %MX 65;	//vereenvoudeging
	blNotBrand:				Bool	at %MX 66;	//vereenvoudeging
	blNotInbraak:			Bool	at %MX 67;	//vereenvoudeging
	blNotDeurPlatina:		Bool	at %MX 68;	//vereenvoudeging
	blWaiting:				Bool;
	blPoort30MinPauze:		Bool;
	
//Register numbers: 1000000 ... 1001999
// Registers
	regActivatietijdvnstr:	Int		at %vl 1000000; //Tijd nodig om venster te openen of sluiten
	regActivatietijdzon:	Int		at %vl 1000001; //Tijd nodig om zonnewering te openen of sluiten
	regVensterNr:			Int		at %vl 1000002; //Nr van het venster dat gecomandeerd wordt
	regZonweerNr:			Int		at %vl 1000003; //Nr van de zonnewering die gecomandeerd wordt
	regVensterComm:			Int		at %vl 1000004; //Commando van het venster dat gecomandeerd wordt 0 = stop 1 = open 2 = dicht
	regZonweerComm:			Int		at %vl 1000005; //Commando van de zonnewering die gecomandeerd wordt 0 = stop 1 = open 2 = dicht
	regUurLampAan:			Int		at %vl 1000006; //
	regUurLampUit:			Int		at %vl 1000007; //
	regMinLampAan:			Int		at %vl 1000008; //
	regMinLampUit:			Int		at %vl 1000009; //
	regUurPoortOpen:		Int		at %vl 1000010; //
	regMinPoortOpen:		Int		at %vl 1000011; //
	regAantDagPoortToe:		Int		at %vl 1000012; //
	regHours:				Int		at %vl 1000013; //
	regMinutes:				Int		at %vl 1000014; //
	regSeconds:				Int		at %vl 1000015; //
//**********************RTC**********************************************
	Milliseconds:			Int		at %vl 102910; //
	Seconds:				Int		at %vl 102911; //
	Minutes:				Int		at %vl 102912; //
	Hours:					Int		at %vl 102913; //
	Weekday:				Int		at %vl 102914; //Weekday (0 = Sunday)
	Day:					Int		at %vl 102915; //
	Month:					Int		at %vl 102916; //
	Year:					Int		at %vl 102917; //
	
//**********************Fouten*******************************************
	Ft01_ZoutniveauLaag:	Bool	at %MX 100;//Zout niveau in ontharder laag
	Ft02_GeenComunicatie:	Bool	at %MX 101;//Geen comuinicatie met Heimdall
	Ft03_Brand:				Bool	at %MX 102;//Brand alarm bij TOM
	Ft04_Inbraak:			Bool	at %MX 103;//Inbraak alarm bij TOM
	Ft05_DeurPlatinaOpen:	Bool	at %MX 104;//Deur naar leufel Platina open
	Ft06_WaterlekZoutvat:	Bool	at %MX 105;//Water in lekbak ontharder
	Ft07_24VDCMotoren:		Bool	at %MX 106;//fout voeding motoren

//**********************Timers********************************************
	stVensters: 			Timer;
	stPoortPuls: 			Timer;
	stPoortOpen: 			Timer;
	stRegenSensor:			Timer;

End_var


Task tMain Autorun
//Init
//Reset registers
	regVensterComm:=0;
	regZonweerComm:=0;
//Reset flags
	blLampenAan := False;
	blLampen1Aan := False;
	blLampen2Aan := False;
	blLampen3Aan := False;
	blAutoLampenAan := False;
	blManLampenAan := False;
	blAlleVenstersDicht := False;
	blAlleVenstersOpen := False;
	blAlleZonweerDicht := False;
	blAlleZonweerOpen := False;
	blPulsPoort := False;
	blVenster1 := False;
	blVenster2 := False;
	blVenster3 := False;
	blVenster4 := False;
	blVenster5 := False;
	blVenster6 := False;
	blVenster7 := False;
	blVenster8 := False;
	blVenster9 := False;
	blVenster10 := False;
	blVenster11 := False;
	blVenster12 := False;
	blVenster13 := False;
	blVenster14 := False;
	blVenster15 := False;
	blVenster16 := False;
	blVenster17 := False;
	blVenster18 := False;
	blZonnewering1 := False;
	blZonnewering3 := False;
	blZonnewering4 := False;
	blZonnewering5 := False;
	blZonnewering6 := False;
	blZonnewering12 := False;
	blZonnewering13 := False;
	blZonnewering15 := False;
	blZonnewering16 := False;
	blZonnewering17 := False;
	blRegen := False;
	blSetClock := False;
	blPoort30MinPauze := False;
//Reset outputs
	hrVenster1 := False;
	hrVenster2 := False;
	hrVenster3 := False;
	hrVenster4 := False;
	hrVenster5 := False;
	hrVenster6 := False;
	hrVenster7 := False;
	hrVenster8 := False;
	hrVenster9 := False;
	hrVenster10 := False;
	hrVenster11 := False;
	hrVenster12 := False;
	hrVenster13 := False;
	hrVenster14 := False;
	hrVenster15 := False;
	hrVenster16 := False;
	hrVenster17 := False;
	hrZonnewering1 := False;
	hrZonnewering3 := False;
	hrZonnewering4 := False;
	hrZonnewering5 := False;
	hrZonnewering6 := False;
	hrZonnewering12 := False;
	hrZonnewering13 := False;
	hrZonnewering15 := False;
	hrZonnewering16 := False;
	hrZonnewering17 := False;
	hrOpenDicht := False;
	hrLampenTom := False;
	hrLampenPlatina := False;
	hrPoortTom := False;
//Reset fouten
	Ft01_ZoutniveauLaag := False;
	Ft02_GeenComunicatie := False;
	Ft03_Brand := False;
	Ft04_Inbraak := False;
	Ft05_DeurPlatinaOpen := False;
	Ft06_WaterlekZoutvat := False;
//**************************************Start Main loop**************************************
	While True Do

// open of dicht
	if (blVensterDicht or blZonweerOpen or blAlleVenstersDicht or blAlleZonweerOpen) then
		blOpenDicht := True;
	End_if;
	
	
//*************************************sturing dakvensters***************************************
//gezamelijk
	if (ctV1Dicht and ctV2Dicht and ctV3Dicht and ctV4Dicht and ctV5Dicht and ctV6Dicht and ctV7Dicht and ctV8Dicht and ctV9Dicht and ctV10Dicht and ctV11Dicht and ctV12Dicht and ctV13Dicht and ctV14Dicht and ctV15Dicht and ctV16Dicht and ctV17Dicht and ctV18Dicht) then
		blAlleVenstersToe := True;
	Else
		blAlleVenstersToe := False;
	End_if;
	if (blRegen or ctAlarmAan) and not blAlleVenstersToe then
		blAlleVenstersDicht := True;
	End_if;

	if blAlleVenstersDicht or (blAlleVenstersOpen and not blRegen) then
		blVenster1 := true;
		blVenster2 := true;
		blVenster3 := true;
		blVenster4 := true;
		blVenster5 := true;
		blVenster6 := true;
		blVenster7 := true;
		blVenster8 := true;
		blVenster9 := true;
		blVenster10 := true;
		blVenster11 := true;
		blVenster12 := true;
		blVenster13 := true;
		blVenster14 := true;
		blVenster15 := true;
		blVenster16 := true;
		blVenster17 := true;
		blVenster18 := true;
		
		TimerStart(stVensters,T#30s);//regActivatietijdzonweer);// Timer is set to 30s and started.
		When TimerEnd(stVensters) or (not blAlleVenstersDicht and not blAlleVenstersOpen) Continue; // When the time has elapsed, the program continues here
			
		blVenster1 := False;
		blVenster2 := False;
		blVenster3 := False;
		blVenster4 := False;
		blVenster5 := False;
		blVenster6 := False;
		blVenster7 := False;
		blVenster8 := False;
		blVenster9 := False;
		blVenster10 := False;
		blVenster11 := False;
		blVenster12 := False;
		blVenster13 := False;
		blVenster14 := False;
		blVenster15 := False;
		blVenster16 := False;
		blVenster17 := False;
		blVenster18 := False;
		
		blAlleVenstersDicht := False;
		blAlleVenstersOpen := False;
		blOpenDicht := False;
	End_if;

// individueel		
		if (blVensterDicht or (blVensterOpen and not blRegen)) and not blAlleVenstersOpen and not blAlleVenstersDicht then
			case regVensterNr of
				1:	blVenster1 := true;
					break;
				
		      	2:	blVenster2 := true;
					break;
				
				3:	blVenster3 := true;
					break;
				
				4:	blVenster4 := true;
					break;
				
				5:	blVenster5 := true;
					break;
				
		  		6:	blVenster6 := true;
					break;
				
		 		7:	blVenster7 := true;
					break;
				
				8:	blVenster8 := true;
					break;
				
				9:	blVenster9 := true;
					break;
				
				10:	blVenster10 := true;
					break;
				
				11:	blVenster11 := true;
					break;
				
				12:	blVenster12 := true;
					break;
				
				13:	blVenster13 := true;
					break;
				
				14:	blVenster14 := true;
					break;
				
				15:	blVenster15 := true;
					break;
				
				16:	blVenster16 := true;
					break;
				
				17:	blVenster17 := true;
					break;
				
				18:	blVenster18 := true;
					break;
			
				Else regVensterNr := -1;

			End_Case;
			TimerStart(stVensters,T#30s);//regActivatietijdzonweer);// Timer is set to 30s and started.
		    When TimerEnd(stVensters) or (not blVensterOpen and not blVensterDicht) Continue; // When the time has elapsed, the program continues here
				blVenster1 := False;
				blVenster2 := False;
				blVenster3 := False;
				blVenster4 := False;
				blVenster5 := False;
				blVenster6 := False;
				blVenster7 := False;
				blVenster8 := False;
				blVenster9 := False;
				blVenster10 := False;
				blVenster11 := False;
				blVenster12 := False;
				blVenster13 := False;
				blVenster14 := False;
				blVenster15 := False;
				blVenster16 := False;
				blVenster17 := False;
				blVenster18 := False;
				blVensterOpen := False;
				blVensterDicht := False;
				blOpenDicht := False;
		End_if;
	
		
		
//*************************************sturing zonnewering**************************************
		if blAlleZonweerDicht or blAlleZonweerOpen then
			blZonnewering1 := true;
			blZonnewering12 := true;
			blZonnewering13 := true;
			blZonnewering15 := true;
			blZonnewering16 := true;
			blZonnewering17 := true;
			blZonnewering3 := true;
			blZonnewering4 := true;
			blZonnewering5 := true;
			blZonnewering6 := true;
			
			TimerStart(stVensters,T#30s);//regActivatietijdzonweer);// Timer is set to 30s and started.
		    When TimerEnd(stVensters) or (not blAlleZonweerDicht and not blAlleZonweerOpen) Continue; // When the time has elapsed, the program continues here
					
			blZonnewering1 := False;
			blZonnewering12 := False;
			blZonnewering13 := False;
			blZonnewering15 := False;
			blZonnewering16 := False;
			blZonnewering17 := False;
			blZonnewering3 := False;
			blZonnewering4 := False;
			blZonnewering5 := False;
			blZonnewering6 := False;
			blAlleZonweerDicht := False;
			blAlleZonweerOpen := False;
			blOpenDicht := False;
		End_if;
		
		if (blZonweerDicht or blZonweerOpen) and not blAlleZonweerDicht and not blAlleZonweerOpen then	
			case regVensterNr of
				1:	blZonnewering1 := true;
					break;
				
				3:	blZonnewering3 := true;
					break;
				
				4:	blZonnewering4 := true;
					break;
				
				5:	blZonnewering5 := true;
					break;
				
				6:	blZonnewering6 := true;
					break;
				
				12:	blZonnewering12 := true;
					break;
				
				13:	blZonnewering13 := true;
					break;
				
				15:	blZonnewering15 := true;
					break;
				
				16:	blZonnewering16 := true;
					break;
				
				17:	blZonnewering17 := true;
					break;
				
				Else regZonweerNr := -1;

			End_Case;
			TimerStart(stVensters,T#30s);//regActivatietijdzonweer);// Timer is set to 30s and started.
		    When TimerEnd(stVensters) or (not blZonweerDicht and not blZonweerOpen) Continue; // When the time has elapsed, the program continues here
			blZonnewering1 := False;
			blZonnewering3 := False;
			blZonnewering4 := False;
			blZonnewering5 := False;
			blZonnewering6 := False;
			blZonnewering12 := False;
			blZonnewering13 := False;
			blZonnewering15 := False;
			blZonnewering16 := False;
			blZonnewering17 := False;
			blZonweerDicht := False;
			blZonweerOpen := False;
			blOpenDicht := False;
		End_if;
		

//*************************************sturing Lampen**********************************************
				
		
		If blLampen1Aan then
			blManLampenAan := True
	 	End_If;
	
		If blLampen2Aan or blLampen3Aan then
			blManLampenAan := True;
		End_If;
		
		If blLampenAan then
			blManLampenAan := True
	 	End_If;
	
		if not (blLampen1Aan or blLampen2Aan or blLampen2Aan or blLampenAan) then
			blManLampenAan := False
		End_If;
		
		if Hours >= regUurLampAan and Minutes >= regMinLampAan then
			blAutoLampenAan := true;
		End_If;

		if Hours >= regUurLampUit and Minutes >= regMinLampUit then
			blAutoLampenAan := False;
			blManLampenAan := False
		End_If;
	
		if (blAutoLampenAan and ctSchemer) or (ctSchemer and ctAlarmUit) or (ctSchemer and not ctPoortDicht) or blLampen1Aan then
			blLampenTom := True;
		else
			blLampenTom := False;
		End_if;
	
		
		if (ctpltnlmpAan and ctSchemer) or blLampen2Aan or blLampen3Aan Then
			blLampenPlatina := True;
		else
			blLampenPlatina := False;
			
		End_If;
		
//*************************************Sturing Poort**********************************************
	
		if (Hours >= regUurPoortOpen and Minutes >= regMinPoortOpen and Weekday > 0 and Weekday < 7 and ctPoortDicht and not blPoortTomIsOpen) then
			if  regAantDagPoortToe == 0 then
				blPoort := True;
				blPoortTomIsOpen := True;
				TimerStart(stPoortOpen,T#30m);//regActivatietijdzonweer);// Timer is set to 30m and started.
				blPoort30MinPauze = True;
			else
				 regAantDagPoortToe :=  regAantDagPoortToe - 1;
			End_if;
		End_If;
		
		If Hours < regUurPoortOpen then
			blPoortTomIsOpen := False; // reset na middernacht
		End_If;
		
		if TimerEnd(stPoortOpen) and ctAlarmAan and not ctPoortDicht and blPoort30MinPauze then
			blPoort := True;
			blPoort30MinPauze := False;
		End_If;
		
		if blPoort or blPulsPoort then
			blPoortTom := True;
			TimerStart(stPoortPuls,T#1s);
	     	When TimerEnd(stPoortPuls) Continue;
			blPoortTom := False;
	 		blPoort := False;
			blPulsPoort := False;
		End_If;
	
	End_While;

End_Task

Task tVeiligheden Autorun
//*************************************tVeiligheden****************************************
	While True Do
//*************************************Alarm**********************************************
//Alarm
		blnotAlarmAan := ctAlarmAan;
		blnotAlarmUit := ctAlarmUit;
		blnotBrand := not ctBrand;
		blnotInbraak := not ctInbraak;
		blnotDeurPlatina := not ctDeurPlatina;
		
		if ctAlarmAan and blVentilatie then
			blVentilatie := False;
		End_if;
		
		if ctAlarmAan and blklepToe then
			blklepToe := False;
		End_if;
	
		if not ctBrand then
			if ctPoortDicht then
				blPulsPoort := True;
			End_if;
			blLampenPlatina := True;
			blLampenTom := True;
		End_If;
	
		if not ctInbraak then
			blLampenTom := True;
		End_If;
//Regen
		if ctregen1 or ctregen2 then 
			blRegen := True;
			blWaiting := False;
		End_if
		
		if blRegen and not ctregen1 and not ctregen2 and not blWaiting then
			TimerStart(stRegenSensor,T#5m);
			blwaiting := True;
		end_if

		if blRegen and TimerEnd(stRegenSensor) and not ctregen1 and not ctregen2 then
			blRegen := False;
			blWaiting := False;
		end_if
		
		blDroog := not blRegen;

//Licht donker
		if not ctSchemer then
			blDonker := False;
			blLicht := True;
		else
			blDonker := True;
			blLicht := False;
		End_if; 

// set clock
		if blSetClock then
			Hours := regHours;
			Minutes := regMinutes;
			Seconds := regSeconds;
			blSetClock := False;
		End_if
//*************************************Outputs**********************************************
		
		if blOpenDicht or blRegen or ctAlarmAan then
			hrOpenDicht := true
		else
			hrOpenDicht := false
		End_If;		

//dakvensters
		if not blVenster1 then
			hrVenster1 := False;
		End_If;		
		if (blVenster1 and not hrOpenDicht) or (blVenster1 and hrOpenDicht) then
			hrVenster1 := True;
		End_If;		
		if not blVenster2 then
			hrVenster2 := False;
		End_If;		
		if (blVenster2 and not hrOpenDicht) or (blVenster2 and hrOpenDicht ) then
			hrVenster2 := True;
		End_If;		
		if not blVenster3 then
			hrVenster3 := False;
		End_If;		
		if (blVenster3 and not hrOpenDicht) or (blVenster3 and hrOpenDicht ) then
			hrVenster3 := True;
		End_If;		
		if not blVenster4 then
			hrVenster4 := False;
		End_If;		
		if (blVenster4 and not hrOpenDicht) or (blVenster4 and hrOpenDicht ) then
			hrVenster4 := True;
		End_If;		
		if not blVenster5 then
			hrVenster5 := False;
		End_If;		
		if (blVenster5 and not hrOpenDicht) or (blVenster5 and hrOpenDicht ) then
			hrVenster5 := True;
		End_If;		
		if not blVenster6 then
			hrVenster6 := False;
		End_If;		
		if (blVenster6 and not hrOpenDicht) or (blVenster6 and hrOpenDicht ) then
			hrVenster6 := True;
		End_If;		
		if not blVenster7 then
			hrVenster7 := False;
		End_If;		
		if (blVenster7 and not hrOpenDicht) or (blVenster7 and hrOpenDicht ) then
			hrVenster7 := True;
		End_If;		
		if not blVenster8 then
			hrVenster8 := False;
		End_If;		
		if (blVenster8 and not hrOpenDicht) or (blVenster8 and hrOpenDicht) then
			hrVenster8 := True;
		End_If;		
		if not blVenster9 then
			hrVenster9 := False;
		End_If;		
		if (blVenster9 and not hrOpenDicht) or (blVenster9 and hrOpenDicht ) then
			hrVenster9 := True;
		End_If;		
		if not blVenster10 then
			hrVenster10 := False;
		End_If;		
		if (blVenster10 and not hrOpenDicht) or (blVenster10 and hrOpenDicht ) then
			hrVenster10 := True;
		End_If;		
		if not blVenster11 then
			hrVenster11 := False;
		End_If;		
		if (blVenster11 and not hrOpenDicht) or (blVenster11 and hrOpenDicht ) then
			hrVenster11 := True;
		End_If;		
		if not blVenster12 then
			hrVenster12 := False;
		End_If;		
		if (blVenster12 and not hrOpenDicht) or (blVenster12 and hrOpenDicht ) then
			hrVenster12 := True;
		End_If;		
		if not blVenster13 then
			hrVenster13 := False;
		End_If;		
		if (blVenster13 and not hrOpenDicht) or (blVenster13 and hrOpenDicht ) then
			hrVenster13 := True;
		End_If;		
		if not blVenster14 then
			hrVenster14 := False;
		End_If;		
		if (blVenster14 and not hrOpenDicht) or (blVenster14 and hrOpenDicht ) then
			hrVenster14 := True;
		End_If;		
		if not blVenster15 then
			hrVenster15 := False;
		End_If;		
		if (blVenster15 and not hrOpenDicht) or (blVenster15 and hrOpenDicht ) then
			hrVenster15 := True;
		End_If;		
		if not blVenster16 then
			hrVenster16 := False;
		End_If;		
		if (blVenster16 and not hrOpenDicht) or (blVenster16 and hrOpenDicht ) then
			hrVenster16 := True;
		End_If;		
		if not blVenster17 then
			hrVenster17 := False;
		End_If;		
		if (blVenster17 and not hrOpenDicht) or (blVenster17 and hrOpenDicht ) then
			hrVenster17 := True;
		End_If;		
		if not blVenster18 then
			hrVenster18 := False;
		End_If;		
		if (blVenster18 and not hrOpenDicht) or (blVenster18 and hrOpenDicht ) then
			hrVenster18 := True;
		End_If;		

//Zonnewering

		if  blZonnewering1 then
			hrZonnewering1 := True;
		else
			hrZonnewering1 := False;
		End_If;		
		
		if blZonnewering3 then
			hrZonnewering3 := True;
		else
			hrZonnewering3 := False;
		End_If;		
		
		if blZonnewering4 then
			hrZonnewering4 := True;
		else
			hrZonnewering4 := False;
		End_If;
						
		if blZonnewering5 then
			hrZonnewering5 := True;
		else
			hrZonnewering5 := False;
		End_If;		
		
		if blZonnewering6 then
			hrZonnewering6 := True;
		else
			hrZonnewering6 := False;
		End_If;		
		
		if blZonnewering12 then
			hrZonnewering12:= True;
		else
			hrZonnewering12:= False;
		End_If;		
		
		if blZonnewering13 then
			hrZonnewering13:= True;
		else
			hrZonnewering13:= False;
		End_If;		
			
		if blZonnewering15 then
			hrZonnewering15:= True;
		else
			hrZonnewering15:= False;
		End_If;		
		
		if blZonnewering16 then
			hrZonnewering16:= True;
		else
			hrZonnewering16:= False;
		End_If;		
			
		if blZonnewering17 then
			hrZonnewering17:= True;
		else
			hrZonnewering17 := False;
		End_If;		
				
//Lampen 
		if blLampenPlatina or blLampenAan then
			hrLampenPlatina := true;
		else
			hrLampenPlatina := false;
		End_If;
	
		if blLampenTom  or blLampenAan then
			hrLampenTom := true;
		else
			hrLampenTom := false;
		End_If;
	
//Poort	
		if blPoortTom then
			hrPoortTom := true;
		else	
			hrPoortTom := False;
		End_If;

	End_While;

End_Task

Task tError Autorun
//*************************************Errors****************************************
	While True Do
//*************************************Ft01_ZoutniveauLaag****************************************
		if not ctZoutLaag then
			Ft01_ZoutniveauLaag := true;
		else
			Ft01_ZoutniveauLaag := False;
		End_If;
//*************************************Ft02_GeenComunicatie****************************************
	
//*************************************Ft03_Brand****************************************
		if not ctBrand then
			Ft03_Brand := true;
		else
			Ft03_Brand := False;
		End_If;
//*************************************Ft04_Inbraak****************************************
		if not ctInbraak then
			Ft04_Inbraak := true;
		else
			Ft04_Inbraak := False;
		End_If;

//*************************************Ft05_DeurPlatinaOpen****************************************
		if not ctDeurPlatina then
			Ft05_DeurPlatinaOpen := true;
		else
			Ft05_DeurPlatinaOpen := False;
		End_If;

//*************************************Ft06_WaterlekZoutvat****************************************
		if not ctZoutVatLek then
			Ft06_WaterlekZoutvat := true;
		else
			Ft06_WaterlekZoutvat := False;
		End_If;
//*************************************Ft07_24VDCMotoren****************************************		
		if not Mot24VOke then
			Ft07_24VDCMotoren := True;
		else
			Ft07_24VDCMotoren := False;
		End_if;
	
//*************************************foutaanwezig****************************************		
		if Ft01_ZoutniveauLaag or Ft02_GeenComunicatie or Ft03_Brand or Ft04_Inbraak or Ft05_DeurPlatinaOpen or Ft06_WaterlekZoutvat or Ft07_24VDCMotoren then
			blnoAlarm := False;
			blAlarm := True
		end_if;
		if not Ft01_ZoutniveauLaag and not Ft02_GeenComunicatie  and not Ft03_Brand  and not Ft04_Inbraak  and not Ft05_DeurPlatinaOpen  and not Ft06_WaterlekZoutvat and not Ft07_24VDCMotoren then
			blnoAlarm := True;
			blAlarm := False
		end_if;

	End_While;
	
End_Task


